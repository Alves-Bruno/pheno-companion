* Plots
Graficos:
- [X] Gcc e P90 de cada ano para os 3 datasets
- [X] Aplicar os níveis de ajuste para os 3 datasets: Ano com mais imagens 
  - AHS: 2011
  - GDK: 2009
  - PEG: 2015
- Para todos os datasets (maior ano):
  - [X] P90 com filtro manual, P90 com filtro L*
  - [X] Average color map: Original x L* filter
- Para o maior dataset, fazer os seguintes gráficos:
  - [X] Avaliação do CIELab para uma hora específica - Gcc, L, a, b - com imagens
  - [X] Avarage color map para todos os níveis de ajuste com os outliers
  - [X] Average color map para todos os níveis de ajuste, após o filtro L*
- Para o maior dataset, com o melhor cenário de ajuste:
  - [X] Average color map com as cores depois do ajuste (local and global)
  - [X] Exemplo de imagens antes/depois do ajuste
* Load libs
#+begin_src R :results output :exports both :session *R-local*
options(crayon.enabled = FALSE)
library(tidyverse)
library(arrow)
library(patchwork)
#+end_src

#+RESULTS:
#+begin_example
── Attaching packages ─────────────────────────────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.3     ✔ dplyr   1.0.7
✔ tidyr   1.1.3     ✔ stringr 1.4.0
✔ readr   2.0.1     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()

Attaching package: ‘arrow’

The following object is masked from ‘package:utils’:

    timestamp
#+end_example

* Functions
#+begin_src R :results output :exports both :session *R-local*
p90_aggregation_simple <- function(df, window_size=5){

  df %>%
    arrange(Year, DOY) -> metrics.ordered

  df %>%
    select(Year, DOY) %>%
    distinct %>%
    arrange(Year, DOY) %>%
    slice(1:(tail(seq(1,n(), by=window_size), n=1)-1)) %>%
    mutate(order = rep(1:(n()/window_size), each=window_size)) -> df.center.order

  df %>%
    # Associate groups and filter out those pictures without a group
    left_join(df.center.order, by = c("Year", "DOY")) %>%
    filter(!is.na(order)) %>%
    group_by(order) %>%
    summarize(
        Year = min(Year),
        DOY = median(DOY), # this effectively gets the DOY in the center
        p90 = quantile(Gcc, probs=c(.90)), .groups="drop") %>%
    return()

}

p90_aggregation_complex <- function(df, window_size=5){

  add_order <- function(df){
    df %>%
      select(year, doy) %>%
      distinct -> df.dist

      if(nrow(df.dist) < window_size){
         #print("Agreggation error.")
         return(df %>% mutate(order = -1))
      }
      
      df.dist %>%
      slice(1:(tail(seq(1,n(), by=window_size), n=1)-1)) %>%
      mutate(order = rep(1:(n()/window_size), each=window_size)) %>%
      return()
  }

  df %>%
    select(year, doy, Camera_ID, run.level, run.window) %>%
    #distinct %>%
    arrange(year, doy) %>%
    group_by(Camera_ID, run.level, run.window) %>%
    group_modify(~ add_order(.x)) -> df.center.order

  if(nrow(df.center.order %>% filter(order == -1)) > 0){
    print("Aggregation error - window_size is greater than grouped nrows().")
    return(df)
  }

  #return(df.center.order)
  #print(df.center.order %>% as.data.frame)

  df %>%
    # Associate groups and filter out those pictures without a group
    left_join(df.center.order, by = c("year", "doy", "Camera_ID", "run.level", "run.window")) %>%
    filter(!is.na(order)) %>%
    group_by(order, run.level, run.window, Camera_ID) %>%
    summarize(
        .groups = "keep",
        year = min(year),
        doy = median(doy), # this effectively gets the doy in the center
        p90.gcc = quantile(Gcc_Bruna, probs=c(.90)),
        p90.merged.gcc = quantile(merged.Gcc, probs=c(.90)),
        p90.new.gcc = quantile(new.Gcc, probs=c(.90), na.rm = TRUE)) %>%
    ungroup() %>%
    return()

}

#+end_src

#+RESULTS:

* Load datasets
#+begin_src R :results output :exports both :session *R-local*
# AHS
read_parquet("./data/AHS_metrics-all.parquet") %>%
  as_tibble() %>%
  select(
    Picture.Path,
    Gcc = Gcc_Bruna, 
    L_mean, A_mean, B_mean,
    r_mean, g_mean, b_mean,
    Year, DOY = Day, Hour, Minute, Dataset,
    Camera_ID, Mask.Path
  ) %>%
  filter(between(Year, 2010, 2016))  -> data.AHS

# GDK
read_parquet("./data/GDK_metrics-all.parquet") %>%
  as_tibble() %>%
  select(
    Gcc = Gcc_Bruna, 
    L_mean, A_mean, B_mean,
    r_mean, g_mean, b_mean,
    Year, DOY = Day, Hour, Minute, Dataset,
    Camera_ID, Mask.Path
  ) -> data.GDK

# PEG
read_parquet("data/dataset_PEG_stats_all_years.parquet") %>%
  as_tibble() %>%
  select(
    Gcc = Gcc_Bruna, 
    L_mean, A_mean, B_mean,
    r_mean, g_mean, b_mean,
    Year, DOY = Day, Hour, Minute = Seq, Dataset
  ) %>%
  mutate(Dataset = "PEG", Camera_ID="peg") -> data.PEG

bind_rows(
  data.AHS, 
  data.PEG,
  data.GDK
) -> data

#+end_src

#+RESULTS:

* Original GCC plot 
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 600 :session *R-local*
data.AHS %>%
  mutate(Dataset = paste(Dataset, Camera_ID, sep="\n")) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=Gcc), alpha=0.01) +
  theme_bw(base_size=16) +
  facet_grid(Dataset~Year) -> gcc.AHS

data.GDK %>%
  mutate(Dataset = paste(Dataset, Camera_ID, sep="\n")) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=Gcc), alpha=0.1) +
  theme_bw(base_size=16) +
  facet_grid(Dataset~Year) -> gcc.GDK

data.PEG %>%
  ggplot() +
  geom_point(aes(x=DOY, y=Gcc), alpha=0.01) +
  theme_bw(base_size=16) +
  facet_grid(Dataset~Year) -> gcc.PEG


(gcc.AHS + theme(axis.title.x=element_blank())) / 
(gcc.GDK + theme(axis.title.x=element_blank())) / 
(gcc.PEG) 
#+end_src

#+RESULTS:
[[file:~/R-images/image-Original_GCC_plot.png]]

* Original P90 plot

#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*

data.AHS %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=p90, colour=Camera_ID)) +
  geom_line(aes(x=DOY, y=p90, colour=Camera_ID)) +
  theme_bw(base_size=16) +
  facet_wrap(~Year) -> p90.AHS

data.GDK %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=p90, colour=Camera_ID)) +
  geom_line(aes(x=DOY, y=p90, colour=Camera_ID)) +
  theme_bw(base_size=16) +
  facet_wrap(~Year) -> p90.GDK

data.AHS %>%
  group_by(Dataset) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=p90)) +
  geom_line(aes(x=DOY, y=p90)) +
  theme_bw(base_size=16) +
  facet_wrap(~Year)  -> p90.PEG

(p90.AHS + theme(legend.position = "top")) + 
(p90.GDK + theme(legend.position = "top")) +
p90.PEG

#+end_src

#+RESULTS:
[[file:~/R-images/image-Original_P90_plot.png]]

* Original Gcc and P90 plot
** AHS - Gcc and P90
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*
data.AHS %>%
  mutate(Dataset = paste(Dataset, Camera_ID, sep="\n")) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=Gcc), alpha=0.01) +
  theme_bw(base_size=16) +
  theme(
    axis.title.x=element_blank(),
  ) +
  facet_grid(Dataset~Year) -> gcc.AHS

data.AHS %>%
  mutate(Dataset = paste(Dataset, Camera_ID, sep="\n")) %>%
  group_by(Dataset) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=p90)) +
  geom_line(aes(x=DOY, y=p90)) +
  theme_bw(base_size=16) +
  ylab("Gcc P90") + 
  facet_grid(Dataset~Year) -> p90.AHS

p<- gcc.AHS / p90.AHS

ggsave(
  "AHS-gcc-p90.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 6)

p
#+end_src

#+RESULTS:
[[file:~/R-images/image-AHS_-_Gcc_and_P90.png]]

** GDK - Gcc and P90
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*
data.GDK %>%
  mutate(Dataset = paste(Dataset, Camera_ID, sep="\n")) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=Gcc), alpha=0.1) +
  theme_bw(base_size=16) +
  theme(
    axis.title.x=element_blank(),
  ) +
  facet_grid(Dataset~Year) -> gcc.GDK

data.GDK %>%
  mutate(Dataset = paste(Dataset, Camera_ID, sep="\n")) %>%
  group_by(Dataset) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=p90)) +
  geom_line(aes(x=DOY, y=p90)) +
  theme_bw(base_size=16) +
  ylab("Gcc P90") + 
  facet_grid(Dataset~Year) -> p90.GDK

p <- gcc.GDK / p90.GDK

ggsave(
  "GDK-gcc-p90.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
##  scale = 1,
  width = 8,
  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-GDK_-_Gcc_and_P90.png]]

** PEG - Gcc and P90
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*
data.PEG %>%
  ggplot() +
  geom_point(aes(x=DOY, y=Gcc), alpha=0.01) +
  theme_bw(base_size=16) +
  theme(
    axis.title.x=element_blank(),
  ) +
  facet_grid(Dataset~Year) -> gcc.PEG

data.PEG %>%
  group_by(Dataset) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  ggplot() +
  geom_point(aes(x=DOY, y=p90)) +
  geom_line(aes(x=DOY, y=p90)) +
  theme_bw(base_size=16) +
  ylab("Gcc P90") + 
  facet_grid(Dataset~Year)  -> p90.PEG

p <- gcc.PEG / p90.PEG

ggsave(
  "PEG-gcc-p90.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
##  scale = 1,
  width = 10,
  height = 6)
#+end_src

#+RESULTS:
[[file:~/R-images/image-PEG_-_Gcc_and_P90.png]]

* Select the bigger year for each dataset
#+begin_src R :results output :exports both :session *R-local*
data %>%
  count(Dataset, Year) %>%
  arrange(Dataset, desc(n)) %>%
  group_by(Dataset) %>%
  slice(1)

data.AHS %>%
  filter(Year == 2011) -> data.AHS.bigger

data.GDK %>%
  filter(Year == 2009) -> data.GDK.bigger

data.PEG %>%
  filter(Year == 2015) -> data.PEG.bigger
#+end_src

#+RESULTS:
: # A tibble: 3 × 3
: # Groups:   Dataset [3]
:   Dataset  Year     n
:   <
:   <
: <int>
: 1 AHS      2011 24657
: 2 GDK      2009 10341
: 3 PEG      2015 16484

* Hourly lstar
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*
data.PEG.bigger %>%
  ggplot(aes(x=DOY, y=L_mean)) +
  geom_point() +
  facet_grid(Dataset~Hour)
#+end_src

#+RESULTS:
[[file:~/R-images/image-Hourly_lstar.png]]

* Lstar filter x Manual filter
** AHS lstar x Manual filter
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

bind_rows(
  data.AHS.bigger %>%
  mutate(type="Original"),

  data.AHS.bigger %>%
  filter(L_mean > 10) %>%
  mutate(type="L* Filter"),

  data.AHS.bigger %>%
  filter(between(Hour, 08, 15)) %>%
  mutate(type="Hour-based\nFilter")

) -> AHS.plot

AHS.plot %>%
  rowwise() %>%
  filter(
    (Camera_ID == "f02_u" && (Minute %in% c(20)) ) ||
    (Camera_ID == "t24_d" && (Minute %in% c( 0))  )
  ) %>%
  ungroup() -> AHS.plot 

AHS.plot %>%
  ggplot(aes(x=DOY, y=Gcc)) +
  geom_point(alpha=.2) +
  theme_bw(base_size=16) +
  theme(axis.title.x=element_blank()) +
  facet_grid(
    Camera_ID~factor(type, levels=c("Original", "L* Filter", "Hour-based\nFilter"))
  ) -> gcc

AHS.plot %>%
  left_join(
    AHS.plot %>% 
      group_by(Camera_ID, type) %>% 
      count(n()) %>% 
      select(number_of_images = n)
   ) -> AHS.plot

gcc +
  ylim(0.2, 0.8) + 
  geom_label( 
    data= AHS.plot %>% group_by(Camera_ID, type) %>% slice(1), 
    aes(x=320, y=0.75, label=number_of_images),
    label.padding = unit(0.08, "lines"),
    size = 3.5 
  ) -> gcc


r <- (AHS.plot$r_mean / 256)
g <- (AHS.plot$g_mean / 256)
b <- (AHS.plot$b_mean / 256)

AHS.plot %>%
  ggplot() +
  geom_tile(aes(x=DOY, y=Hour), fill=rgb(r, g, b), color=rgb(r, g, b)) + 
#  geom_label( 
#    data= AHS.plot %>% group_by(Camera_ID, type) %>% slice(1) 
#    aes(x=350, y=0, label=number_of_images)
#  ) +
  theme_bw(base_size=16) +
  theme(legend.position = "none") +  
  facet_grid(
    Camera_ID~factor(type, levels=c("Original", "L* Filter", "Hour-based\nFilter"))
  ) -> map

p <- gcc / map

ggsave(
  "AHS-filters.png",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 6,
  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-AHS_lstar_x_Manual_filter.png]]
** AHS P90 lstar x Manual filter
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

bind_rows(

  data.AHS.bigger %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(type="Original"),

  data.AHS.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(type="L* Filter"),

  data.AHS.bigger %>%
  filter(between(Hour, 08, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(type="Manual Filter") 

) -> AHS.plot

AHS.plot %>%
  ggplot(aes(x=DOY, y=p90)) +
  geom_point() +
  geom_line(alpha=0.7) +
  theme_bw(base_size=16) +
  facet_grid(Camera_ID~type) 
#+end_src

#+RESULTS:
[[file:~/R-images/image-AHS_P90_lstar_x_Manual_filter.png]]
** GDK lstar x Manual filter
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

bind_rows(

  data.GDK.bigger %>%
  mutate(type="Original"),

  data.GDK.bigger %>%
  filter(L_mean > 10) %>%
  mutate(type="L* Filter"),

  data.GDK.bigger %>%
  filter(between(Hour, 08, 16)) %>%
  mutate(type="Hour-based\nFilter")

) -> GDK.plot

GDK.plot %>%
  ggplot(aes(x=DOY, y=Gcc)) +
  geom_point(alpha=.2) +
  theme_bw(base_size=16) +
  theme(axis.title.x=element_blank()) +
  facet_grid(
    Camera_ID~factor(type, levels=c("Original", "L* Filter", "Hour-based\nFilter"))
  ) -> gcc

GDK.plot %>%
  left_join(
    GDK.plot %>% 
      group_by(Camera_ID, type) %>% 
      count(n()) %>% 
      select(number_of_images = n)
   ) -> GDK.plot

gcc +
#  ylim(0.2, 0.8) + 
  geom_label( 
    data= GDK.plot %>% group_by(Camera_ID, type) %>% slice(1), 
    aes(x=320, y=0.68, label=number_of_images),
    label.padding = unit(0.08, "lines"),
    size = 3.5 
  ) -> gcc

GDK.plot %>%
  rowwise() %>%
  filter(
    Minute %in% c(0)
  ) %>%
  ungroup() -> GDK.plot 

r <- (GDK.plot$r_mean / 256)
g <- (GDK.plot$g_mean / 256)
b <- (GDK.plot$b_mean / 256)

GDK.plot %>%
  ggplot() +
  geom_tile(aes(x=DOY, y=Hour), fill=rgb(r, g, b), color=rgb(r, g, b)) + 
  theme_bw(base_size=16) +
  theme(legend.position = "none") +  
  facet_grid(
    Camera_ID~factor(type, levels=c("Original", "L* Filter", "Hour-based\nFilter"))
  ) -> map

p <- gcc / map

ggsave(
  "GDK-filters.png",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 6,
  height = 7.5)
#+end_src

#+RESULTS:
[[file:~/R-images/image-GDK_lstar_x_Manual_filter.png]]
** GDK P90 lstar x Manual filter
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

bind_rows(
  data.GDK.bigger %>%
  filter(L_mean > 20) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(type="L* Filter"),

  data.GDK.bigger %>%
  filter(between(Hour, 08, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(type="Manual Filter") 

) -> GDK.plot

GDK.plot %>%
  ggplot(aes(x=DOY, y=p90)) +
  geom_point() +
  geom_line(alpha=0.7) +
  theme_bw(base_size=16) +
  facet_grid(Camera_ID~type) 
#+end_src

#+RESULTS:
[[file:~/R-images/image-GDK_P90_lstar_x_Manual_filter.png]]
** PEG lstar x Manual filter
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

bind_rows(
  data.PEG.bigger %>%
  mutate(type="Manual Filter"),

  data.PEG.bigger %>%
  filter(L_mean > 10) %>%
#  filter(between(L_mean, 40, 60)) %>%
  mutate(type="L* Filter\n10 - 100"),

  data.PEG.bigger %>%
#  filter(L_mean > 10) %>%
  filter(between(L_mean, 40, 58)) %>%
  mutate(type="L* Filter\n40 - 60"),

  data.PEG.bigger %>%
  filter(between(Hour, 08, 16)) %>%
  mutate(type="Hour-based\nFilter")

) -> PEG.plot

PEG.plot %>%
  ggplot(aes(x=DOY, y=Gcc)) +
  geom_point(alpha=.2) +
  theme_bw(base_size=16) +
  theme(axis.title.x=element_blank()) +
  facet_grid(
#    Camera_ID~factor(type, levels=c("Original", "L* Filter", "Manual Filter"))
    Camera_ID~factor(type, levels=c("Manual Filter", "L* Filter\n10 - 100", "L* Filter\n40 - 60", "Hour-based\nFilter"))
#    Camera_ID~factor(type, levels=c("Original", "L* Filter"))
  ) -> gcc

PEG.plot %>%
  left_join(
    PEG.plot %>% 
      group_by(Camera_ID, type) %>% 
      count(n()) %>% 
      select(number_of_images = n)
   ) -> PEG.plot

gcc +
#  ylim(0.2, 0.8) + 
  geom_label( 
    data= PEG.plot %>% group_by(Camera_ID, type) %>% slice(1), 
    aes(x=310, y=0.364, label=number_of_images),
    label.padding = unit(0.08, "lines"),
    size = 3.5 
  ) -> gcc

PEG.plot %>%
  rowwise() %>%
  filter(
    Minute %in% c(1, 4) 
  ) %>%
  mutate(Minute = if_else(Minute == 1, 0.00, 0.5)) %>%
  mutate(Hour = Hour + Minute) %>%
  ungroup() -> PEG.plot 

r <- (PEG.plot$r_mean / 256)
g <- (PEG.plot$g_mean / 256)
b <- (PEG.plot$b_mean / 256)

PEG.plot %>%
  ggplot() +
  geom_tile(aes(x=DOY, y=Hour), fill=rgb(r, g, b), color=rgb(r, g, b)) + 
  theme_bw(base_size=16) +
  theme(legend.position = "none") +  
  ylim(5, 20) + 
  facet_grid(
#    Camera_ID~factor(type, levels=c("Original", "L* Filter", "Manual Filter"))
    Camera_ID~factor(type, levels=c("Manual Filter", "L* Filter\n10 - 100", "L* Filter\n40 - 60", "Hour-based\nFilter"))
  ) -> map

p <- gcc / map
p

ggsave(
  "PEG-filters.png",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 7,
  height = 6)
#+end_src

#+RESULTS:
[[file:~/R-images/image-PEG_lstar_x_Manual_filter.png]]
** PEG P90 lstar x Manual filter
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

bind_rows(
  data.PEG.bigger %>%
#  filter(L_mean > 10) %>%
  filter(between(L_mean, 30, 80)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(type="L* Filter"),

  data.PEG.bigger %>%
  filter(between(Hour, 08, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(type="Manual Filter") 

) -> PEG.plot

PEG.plot %>%
  ggplot(aes(x=DOY, y=p90)) +
  geom_point() +
  geom_line(alpha=0.7) +
  theme_bw(base_size=16) +
  facet_grid(Camera_ID~type) 
#+end_src

#+RESULTS:
[[file:~/R-images/image-PEG_P90_lstar_x_Manual_filter.png]]
* Load adjusted metrics
** Default adjust
*** AHS
#+begin_src R :results output :exports both :session *R-local*
data.AHS.adj <- tibble()

for(level in seq(0.10, 0.95, 0.10)){
  for(window in c(3, 5, 10, 100, 365)){
#  for(window in c(3, 5, 10, 100, 200)){
    file_name = paste0("./data/run_again/AHS-2011-adjusted-window-", window ,"_level-", floor(level*100), ".parquet")
    #print(file_name)
    
    data.AHS.adj %>%
      bind_rows(
        read_parquet(file_name) %>%
          as_tibble() %>%
          mutate(
            run.level = level, 
            run.window = window, 
            run.type = paste0("window=", window, "\nlevel=", level)
         )
      ) -> data.AHS.adj
      
  }
}

data.AHS.adj %>% 
#  mutate(merged.Gcc = ifelse(is.na(new.Gcc), Gcc_Bruna, new.Gcc)) %>%
  ungroup() %>% 
  select(-order) -> data.AHS.adj

data.AHS.adj

#+end_src

#+RESULTS:
#+begin_example
# A tibble: 1,109,565 × 30
   Camera_ID Gcc_Bruna      x      y       z r_mean g_mean  b_mean  year   doy
   <
        <
 <
 <
  <
 <
 <
  <
<
<int>
 1 f02_u         0.596  0.128 -0.146   0.126  0.230  0.568   0.155  2011     1
 2 f02_u         0.605  0.126 -0.147   0.123  0.214  0.561   0.153  2011     1
 3 f02_u         0.578  0.130 -0.138   0.127  0.259  0.570   0.158  2011     1
 4 f02_u         0.580  0.132 -0.142   0.127  0.254  0.578   0.165  2011     1
 5 f02_u         0.576  0.129 -0.137   0.124  0.254  0.565   0.162  2011     1
 6 f02_u         0.522  0.139 -0.117   0.128  0.346  0.583   0.189  2011     1
 7 f02_u         0.295  1.59   0.339  -2.19   3.61   5.31    9.06   2011     1
 8 f02_u         0.298 37.3    7.30  -16.6   87.7   87.7   119.     2011     1
 9 f02_u         0.334 36.8   -2.06  -13.8   70.5   91.8   113.     2011     1
10 f02_u         0.326 37.1    0.182  -9.83  81.2   91.0   107.     2011     1
# … with 1,109,555 more rows, and 20 more variables: Hour <int>, Minute <int>,
#   Dataset <chr>, Mask.Path <chr>, max.doy <int>, total <int>,
#   line_number <int>, type <chr>, x.border <dbl>, y.border <dbl>,
#   z.border <dbl>, lab_to_rgb <list<double>>, R <dbl>, G <dbl>, B <dbl>,
#   new.Gcc <dbl>, merged.Gcc <dbl>, run.level <dbl>, run.window <dbl>,
#   run.type <chr>
#+end_example

*** GDK
#+begin_src R :results output :exports both :session *R-local*
data.GDK.adj <- tibble()

for(level in seq(0.10, 0.95, 0.10)){
  for(window in c(3, 5, 10, 100, 365)){
#  for(window in c(3, 5, 10, 100, 200)){
    file_name = paste0("./data/run_again/GDK-2009-adjusted-window-", window ,"_level-", floor(level*100), ".parquet")
    #print(file_name)
    
    data.GDK.adj %>%
      bind_rows(
        read_parquet(file_name) %>%
          as_tibble() %>%
          mutate(
            run.level = level, 
            run.window = window, 
            run.type = paste0("window=", window, "\nlevel=", level)
         )
      ) -> data.GDK.adj
      
  }
}

data.GDK.adj %>% 
#  mutate(merged.Gcc = ifelse(is.na(new.Gcc), Gcc_Bruna, new.Gcc)) %>%
  ungroup() %>% 
  select(-order) -> data.GDK.adj

data.GDK.adj

#+end_src

#+RESULTS:
#+begin_example
# A tibble: 465,345 × 30
   Camera_ID Gcc_Bruna      x       y        z r_mean g_mean b_mean  year   doy
   <
        <
 <
  <
   <
 <
 <
 <
<
<int>
 1 e18_s         0.313 28.0    2.41   -16.2    54.9   66.7   91.4    2009    65
 2 e18_s         0.323 26.0    0.270  -14.1    48.3   62.7   83.2    2009    65
 3 e18_s         0.391  0.239 -0.0917   0.0291  0.665  0.939  0.795  2009    65
 4 e18_s         0.399  0.213 -0.0882   0.0419  0.594  0.841  0.670  2009    66
 5 e18_s         0.325 31.4    2.25     0.0147 77.8   73.3   74.6    2009    66
 6 e18_s         0.324 26.5    0.996   -5.05   60.6   63.1   71.0    2009    66
 7 e18_s         0.323 29.9    1.55    -4.45   69.8   70.6   78.1    2009    66
 8 e18_s         0.320 33.8    2.72    -4.09   81.2   79.0   86.7    2009    66
 9 e18_s         0.318 34.4    3.60    -2.94   85.5   80.2   86.6    2009    66
10 e18_s         0.317 27.6    1.62   -12.3    56.9   65.5   84.3    2009    66
# … with 465,335 more rows, and 20 more variables: Hour <int>, Minute <int>,
#   Dataset <chr>, Mask.Path <chr>, max.doy <int>, total <int>,
#   line_number <int>, type <chr>, x.border <dbl>, y.border <dbl>,
#   z.border <dbl>, lab_to_rgb <list<double>>, R <dbl>, G <dbl>, B <dbl>,
#   new.Gcc <dbl>, merged.Gcc <dbl>, run.level <dbl>, run.window <dbl>,
#   run.type <chr>
#+end_example

*** PEG
#+begin_src R :results output :exports both :session *R-local*
data.PEG.adj <- tibble()

for(level in seq(0.10, 0.95, 0.10)){
  for(window in c(3, 5, 10, 100, 365)){
#  for(window in c(3, 5, 10, 100, 200)){
    file_name = paste0("./data/run_again/PEG-2015-adjusted-window-", window ,"_level-", floor(level*100), ".parquet")
    #print(file_name)
    
    data.PEG.adj %>%
      bind_rows(
        read_parquet(file_name) %>%
          as_tibble() %>%
          mutate(
            run.level = level, 
            run.window = window, 
            run.type = paste0("window=", window, "\nlevel=", level)
         )
      ) -> data.PEG.adj
      
  }
}

data.PEG.adj %>% 
#  mutate(merged.Gcc = ifelse(is.na(new.Gcc), Gcc_Bruna, new.Gcc)) %>%
  ungroup() %>% 
  select(-order) -> data.PEG.adj

data.PEG.adj

#+end_src

#+RESULTS:
#+begin_example
# A tibble: 741,780 × 29
   Camera_ID Gcc_Bruna     x     y     z r_mean g_mean b_mean  year   doy  Hour
   <
        <
<
<
<
 <
 <
 <
<
<
<int>
 1 peg           0.342  54.1 -2.48  3.50   129.   132.  125.   2015     1     6
 2 peg           0.342  54.1 -2.45  3.44   129.   132.  125.   2015     1     6
 3 peg           0.342  54.2 -2.44  3.47   129.   133.  125.   2015     1     6
 4 peg           0.342  54.2 -2.43  3.42   130.   133.  126.   2015     1     6
 5 peg           0.341  50.0 -1.09  5.74   125.   123.  113.   2015     1     7
 6 peg           0.341  50.0 -1.10  5.74   125.   123.  113.   2015     1     7
 7 peg           0.341  50.0 -1.13  5.72   125.   123.  113.   2015     1     7
 8 peg           0.341  50.0 -1.11  5.67   125.   123.  113.   2015     1     7
 9 peg           0.347  46.6 -2.10  8.39   116.   115.   99.5  2015     1     8
10 peg           0.347  46.6 -2.13  8.34   116.   115.   99.6  2015     1     8
# … with 741,770 more rows, and 18 more variables: Minute <int>, Dataset <chr>,
#   max.doy <int>, total <int>, line_number <int>, type <chr>, x.border <dbl>,
#   y.border <dbl>, z.border <dbl>, lab_to_rgb <list<double>>, R <dbl>,
#   G <dbl>, B <dbl>, new.Gcc <dbl>, merged.Gcc <dbl>, run.level <dbl>,
#   run.window <dbl>, run.type <chr>
#+end_example
** After L filter adjust
*** AHS
#+begin_src R :results output :exports both :session *R-local*
data.AHS.adj.lstar <- tibble()

for(level in seq(0.10, 0.95, 0.10)){
  for(window in c(3, 5, 10, 100, 365)){
#  for(window in c(3, 5, 10, 100, 200)){
    file_name = paste0("./data/run_again/AHS-2011-adjusted-lstar-window-", window ,"_level-", floor(level*100), ".parquet")
    #print(file_name)
    
    data.AHS.adj.lstar %>%
      bind_rows(
        read_parquet(file_name) %>%
          as_tibble() %>%
          mutate(
            run.level = level, 
            run.window = window, 
            run.type = paste0("window=", window, "\nlevel=", level)
         )
      ) -> data.AHS.adj.lstar
      
  }
}

data.AHS.adj.lstar %>% 
#  mutate(merged.Gcc = ifelse(is.na(new.Gcc), Gcc_Bruna, new.Gcc)) %>%
  ungroup() %>% 
  select(-order) -> data.AHS.adj.lstar

data.AHS.adj.lstar

#+end_src

#+RESULTS:
#+begin_example
# A tibble: 849,150 × 30
   Camera_ID Gcc_Bruna     x      y      z r_mean g_mean b_mean  year   doy
   <
        <
<
 <
 <
 <
 <
 <
<
<int>
 1 f02_u         0.298  37.3  7.30  -16.6    87.7   87.7  119.   2011     1
 2 f02_u         0.334  36.8 -2.06  -13.8    70.5   91.8  113.   2011     1
 3 f02_u         0.326  37.1  0.182  -9.83   81.2   91.0  107.   2011     1
 4 f02_u         0.326  36.6  0.928  -4.71   86.5   88.9   97.0  2011     1
 5 f02_u         0.327  37.2  0.785  -4.37   88.1   90.4   97.9  2011     1
 6 f02_u         0.327  36.2  0.974  -3.69   86.6   87.8   94.2  2011     1
 7 f02_u         0.328  37.5  0.837  -3.48   89.7   91.0   97.2  2011     1
 8 f02_u         0.328  37.0  0.831  -3.12   88.8   89.8   95.3  2011     1
 9 f02_u         0.328  36.5  0.783  -2.98   87.6   88.6   93.8  2011     1
10 f02_u         0.327  36.8  0.882  -3.52   88.0   89.3   95.5  2011     1
# … with 849,140 more rows, and 20 more variables: Hour <int>, Minute <int>,
#   Dataset <chr>, Mask.Path <chr>, max.doy <int>, total <int>,
#   line_number <int>, type <chr>, x.border <dbl>, y.border <dbl>,
#   z.border <dbl>, lab_to_rgb <list<double>>, R <dbl>, G <dbl>, B <dbl>,
#   new.Gcc <dbl>, merged.Gcc <dbl>, run.level <dbl>, run.window <dbl>,
#   run.type <chr>
#+end_example

*** GDK
#+begin_src R :results output :exports both :session *R-local*
data.GDK.adj.lstar <- tibble()

for(level in seq(0.10, 0.95, 0.10)){
  for(window in c(3, 5, 10, 100, 365)){
#  for(window in c(3, 5, 10, 100, 200)){
    file_name = paste0("./data/run_again/GDK-2009-adjusted-lstar-window-", window ,"_level-", floor(level*100), ".parquet")
    #print(file_name)
    
    data.GDK.adj.lstar %>%
      bind_rows(
        read_parquet(file_name) %>%
          as_tibble() %>%
          mutate(
            run.level = level, 
            run.window = window, 
            run.type = paste0("window=", window, "\nlevel=", level)
         )
      ) -> data.GDK.adj.lstar
      
  }
}

data.GDK.adj.lstar %>% 
#  mutate(merged.Gcc = ifelse(is.na(new.Gcc), Gcc_Bruna, new.Gcc)) %>%
  ungroup() %>% 
  select(-order) -> data.GDK.adj.lstar

data.GDK.adj.lstar

#+end_src

#+RESULTS:
#+begin_example
# A tibble: 409,995 × 30
   Camera_ID Gcc_Bruna     x     y        z r_mean g_mean b_mean  year   doy
   <
        <
<
<
   <
 <
 <
 <
<
<int>
 1 e18_s         0.313  28.0 2.41  -16.2      54.9   66.7   91.4  2009    65
 2 e18_s         0.323  26.0 0.270 -14.1      48.3   62.7   83.2  2009    65
 3 e18_s         0.325  31.4 2.25    0.0147   77.8   73.3   74.6  2009    66
 4 e18_s         0.324  26.5 0.996  -5.05     60.6   63.1   71.0  2009    66
 5 e18_s         0.323  29.9 1.55   -4.45     69.8   70.6   78.1  2009    66
 6 e18_s         0.320  33.8 2.72   -4.09     81.2   79.0   86.7  2009    66
 7 e18_s         0.318  34.4 3.60   -2.94     85.5   80.2   86.6  2009    66
 8 e18_s         0.317  27.6 1.62  -12.3      56.9   65.5   84.3  2009    66
 9 e18_s         0.320  27.7 2.14   -3.91     66.1   65.0   72.0  2009    67
10 e18_s         0.321  31.8 2.69   -2.45     77.7   74.0   79.2  2009    71
# … with 409,985 more rows, and 20 more variables: Hour <int>, Minute <int>,
#   Dataset <chr>, Mask.Path <chr>, max.doy <int>, total <int>,
#   line_number <int>, type <chr>, x.border <dbl>, y.border <dbl>,
#   z.border <dbl>, lab_to_rgb <list<double>>, R <dbl>, G <dbl>, B <dbl>,
#   new.Gcc <dbl>, merged.Gcc <dbl>, run.level <dbl>, run.window <dbl>,
#   run.type <chr>
#+end_example

*** PEG
#+begin_src R :results output :exports both :session *R-local*
data.PEG.adj.lstar <- tibble()

for(level in seq(0.10, 0.95, 0.10)){
  for(window in c(3, 5, 10, 100, 365)){
#  for(window in c(3, 5, 10, 100, 200)){
    file_name = paste0("./data/run_again/PEG-2015-adjusted-lstar-window-", window ,"_level-", floor(level*100), ".parquet")
    #print(file_name)
    
    data.PEG.adj.lstar %>%
      bind_rows(
        read_parquet(file_name) %>%
          as_tibble() %>%
          mutate(
            run.level = level, 
            run.window = window, 
            run.type = paste0("window=", window, "\nlevel=", level)
         )
      ) -> data.PEG.adj.lstar
      
  }
}

data.PEG.adj.lstar %>% 
#  mutate(merged.Gcc = ifelse(is.na(new.Gcc), Gcc_Bruna, new.Gcc)) %>%
  ungroup() %>% 
  select(-order) -> data.PEG.adj.lstar

data.PEG.adj.lstar

#+end_src

#+RESULTS:
#+begin_example
# A tibble: 741,780 × 29
   Camera_ID Gcc_Bruna     x     y     z r_mean g_mean b_mean  year   doy  Hour
   <
        <
<
<
<
 <
 <
 <
<
<
<int>
 1 peg           0.342  54.1 -2.48  3.50   129.   132.  125.   2015     1     6
 2 peg           0.342  54.1 -2.45  3.44   129.   132.  125.   2015     1     6
 3 peg           0.342  54.2 -2.44  3.47   129.   133.  125.   2015     1     6
 4 peg           0.342  54.2 -2.43  3.42   130.   133.  126.   2015     1     6
 5 peg           0.341  50.0 -1.09  5.74   125.   123.  113.   2015     1     7
 6 peg           0.341  50.0 -1.10  5.74   125.   123.  113.   2015     1     7
 7 peg           0.341  50.0 -1.13  5.72   125.   123.  113.   2015     1     7
 8 peg           0.341  50.0 -1.11  5.67   125.   123.  113.   2015     1     7
 9 peg           0.347  46.6 -2.10  8.39   116.   115.   99.5  2015     1     8
10 peg           0.347  46.6 -2.13  8.34   116.   115.   99.6  2015     1     8
# … with 741,770 more rows, and 18 more variables: Minute <int>, Dataset <chr>,
#   max.doy <int>, total <int>, line_number <int>, type <chr>, x.border <dbl>,
#   y.border <dbl>, z.border <dbl>, lab_to_rgb <list<double>>, R <dbl>,
#   G <dbl>, B <dbl>, new.Gcc <dbl>, merged.Gcc <dbl>, run.level <dbl>,
#   run.window <dbl>, run.type <chr>
#+end_example

* Adjusted metrics calculate P90
#+begin_src R :results output :exports both :session *R-local*
data.AHS.adj %>%
  p90_aggregation_complex() -> data.AHS.bigger.p90

data.PEG.adj %>%
  p90_aggregation_complex() -> data.PEG.bigger.p90

data.GDK.adj %>%
  p90_aggregation_complex() -> data.GDK.bigger.p90

data.AHS.adj.lstar %>%
  p90_aggregation_complex() -> data.AHS.bigger.p90.lstar

data.PEG.adj.lstar %>%
  p90_aggregation_complex() -> data.PEG.bigger.p90.lstar

data.GDK.adj.lstar %>%
  p90_aggregation_complex() -> data.GDK.bigger.p90.lstar

#+end_src

#+RESULTS:

* L* picture over the day
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

data.AHS.bigger %>%
filter(Camera_ID == "f02_u") %>%
filter(Hour %in% c(04,05,12,13,19,20)) %>%
filter(Minute <= 20) %>%
      pivot_longer(
#        cols = c("Gcc", "L_mean", "A_mean", "B_mean"),
        cols = c("Gcc", "L_mean"),
        names_to = "Metric",
        values_to = "value",
      ) %>%
mutate(Hour = sprintf("%.2d:00", Hour)) %>%
mutate(Type = if_else(Metric == "Gcc", "Gcc", "L* mean")) -> to_plot

to_plot %>%
filter(Type == "Gcc") %>%
ggplot(aes(x=DOY, y=value)) +
#  geom_point(aes(colour = Metric), alpha=0.2) +
  geom_line(alpha=0.7) +
  theme_bw(base_size=16) +
#  facet_wrap(~Hour, ncol = 6)
  ylab("Gcc value") +  
  theme(
    legend.position = "top", 
     axis.title.x=element_blank(),
     axis.ticks.x=element_blank(),
     axis.text.x=element_blank(),
  ) +
  facet_grid(Type~Hour) -> p.a

to_plot %>%
filter(Type == "L* mean") %>%
ggplot(aes(x=DOY, y=value)) +
#  geom_point(aes(colour = Metric), alpha=0.2) +
  geom_line(alpha=0.7) +
  theme_bw(base_size=16) +
#  facet_wrap(~Hour, ncol = 6)
  ylab("L* value") +  
  theme(
    legend.position = "top", 
    plot.margin = unit(c(0,0,0,0), "cm"),
    strip.text.x = element_blank()
  ) +
  facet_grid(Type~Hour) -> p.b

p <- p.a / p.b 

ggsave(
  "AHS-metrics-over-day.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 6)
#+end_src

#+RESULTS:
[[file:~/R-images/image-L*_picture_over_the_day.png]]
* CIELab to a specific hour
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

highlight <- c(25, 87, 125, 201, 300)

data.AHS.bigger %>%
filter(Camera_ID == "f02_u") %>%
filter(Hour == 05) %>%
filter(Minute <= 20) %>%
      pivot_longer(
        cols = c("Gcc", "L_mean", "A_mean", "B_mean"),
        names_to = "Metric",
        values_to = "value",
      ) %>%
mutate(Hour = sprintf("%.2d:00", Hour)) %>%
mutate(Type = if_else(Metric == "Gcc", "Gcc", "CIELab")) %>%
ggplot(aes(x=DOY, y=value)) +
#  geom_point(aes(colour = Metric), alpha=0.2) +
  geom_line(aes(colour = Metric), alpha=0.7) +
  theme_bw(base_size=16) +
#  facet_wrap(~Hour, ncol = 6)
  ylab("Metrics Values") +  
  theme(
    legend.position = "top", 
  ) + 
  scale_x_continuous(breaks=highlight, labels=highlight) +  
  facet_grid(rows=vars(Type), cols=vars(Hour), scales="free_y") -> plot

df.redLines <- tribble(~X, 25, 87, 125, 201, 300) %>% mutate(Y=1)

plot <- plot +
    geom_vline(data=df.redLines, aes(xintercept=X), alpha=.2, size=0.75, color="black")
##    geom_label(data=df.redLines, aes(x=X, y=-40, label = X), size=2.75)

plot 

ggsave(
  "AHS-metrics-at-4.pdf",
  plot = plot,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 7,
  height = 5)
#+end_src

#+RESULTS:
[[file:~/R-images/image-CIELab_to_a_specific_hour.png]]
* Average color map - outlier detection
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 600 :session *R-local*

cam <- "f02_u"
#cam <- "t24_d"

min <- 0
if(cam == "t24_d"){
  min <- 0
}else{
  min <- 20
}

data.AHS.adj %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  mutate(outlier = if_else(type == "to_adjust", TRUE, FALSE)) %>%
  mutate(alpha = if_else(outlier, 0.0, 1.0)) -> map.df

#  rowwise() %>%
#  filter(
#    (Camera_ID == "f02_u" && (Minute %in% c(20)) ) ||
#    (Camera_ID == "t24_d" && (Minute %in% c( 0))  )
#  ) %>%
#  ungroup() -> AHS.pAlot 

r <- (map.df$r_mean / 256)
g <- (map.df$g_mean / 256)
b <- (map.df$b_mean / 256)
alp <- (map.df$alpha)

map.df -> map.df2

map.df2 %>% filter(outlier == TRUE) -> map.df_outliers
map.df2 %>% filter(outlier == FALSE) -> map.df_non_outliers

r <- (map.df_non_outliers$r_mean / 256)
g <- (map.df_non_outliers$g_mean / 256)
b <- (map.df_non_outliers$b_mean / 256)
alp <- (map.df_non_outliers$alpha)

ggplot() +
  geom_tile(data=map.df_outliers, aes(x=DOY, y=Hour, fill=outlier, color=outlier)) + 
  geom_tile(data=map.df_non_outliers, aes(x=DOY, y=Hour), fill=rgb(r, g, b), color=rgb(r, g, b)) + 
  theme_bw(base_size=16) +
  theme(
    legend.position = "none",
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
  ) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(run.window~run.level, scale="free") -> p 



map.df %>%
  left_join(
    map.df %>% 
      group_by(Camera_ID, type) %>% 
      count(n()) %>% 
      select(number_of_images = n)
   ) -> AHS.plot

map.df %>% 
  group_by(run.window, run.level, outlier) %>% 
  mutate(n_images = n()) %>% 
  select(n_images, outlier) %>% 
  distinct() -> labels

p +
#  ylim(4.6, 24) + 
  geom_label( 
    data= labels %>% filter(outlier == TRUE),
    aes(x=318, y=20, label=n_images),
#    aes(x=46, y=20, label=n_images),
    label.padding = unit(0.08, "lines"),
    color = "red3",
    size = 4.8 
  ) -> p

#p +
##  ylim(4.6, 24) + 
#  geom_label( 
#    data= labels %>% filter(outlier == FALSE),
#    aes(x=320, y=20, label=n_images),
#    label.padding = unit(0.08, "lines"),
#    color = "blue",
#    size = 3.5 
#  ) -> p

#ggsave(
#  "../images/results/AHS-color-map.pdf",
#  plot = p,
##  path = ".",
#  scale = 1,
#  width = 18,
#  height = 8)

ggsave(
  "../images/results/AHS-color-map.png",
  plot = p,
  path = ".",
#  scale = 1,
  width = 18,
  height = 8)
#+end_src

#+RESULTS:
[[file:~/R-images/image-Average_color_map_-_outlier_detection.png]]

* Average color map after L* - outlier detection
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 600 :session *R-local*

cam <- "f02_u"
#cam <- "t24_d"

min <- 0
if(cam == "t24_d"){
  min <- 0
}else{
  min <- 20
}

data.AHS.adj.lstar %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  mutate(outlier = if_else(type == "to_adjust", TRUE, FALSE)) %>%
  mutate(alpha = if_else(outlier, 0.0, 1.0)) -> map.df

#  rowwise() %>%
#  filter(
#    (Camera_ID == "f02_u" && (Minute %in% c(20)) ) ||
#    (Camera_ID == "t24_d" && (Minute %in% c( 0))  )
#  ) %>%
#  ungroup() -> AHS.pAlot 

r <- (map.df$r_mean / 256)
g <- (map.df$g_mean / 256)
b <- (map.df$b_mean / 256)
alp <- (map.df$alpha)

map.df -> map.df2

map.df2 %>% filter(outlier == TRUE) -> map.df_outliers
map.df2 %>% filter(outlier == FALSE) -> map.df_non_outliers

r <- (map.df_non_outliers$r_mean / 256)
g <- (map.df_non_outliers$g_mean / 256)
b <- (map.df_non_outliers$b_mean / 256)
alp <- (map.df_non_outliers$alpha)

ggplot() +
  geom_tile(data=map.df_outliers, aes(x=DOY, y=Hour, fill=outlier, color=outlier)) + 
  geom_tile(data=map.df_non_outliers, aes(x=DOY, y=Hour), fill=rgb(r, g, b), color=rgb(r, g, b)) + 
  theme_bw(base_size=16) +
  theme(
    legend.position = "none",
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(run.window~run.level, scale="free") -> p 

map.df %>% 
  group_by(run.window, run.level, outlier) %>% 
  mutate(n_images = n()) %>% 
  select(n_images, outlier) %>% 
  distinct() -> labels

p +
#  ylim(4.6, 24) + 
  geom_label( 
    data= labels %>% filter(outlier == TRUE),
    aes(x=318, y=19, label=n_images),
#    aes(x=46, y=20, label=n_images),
    label.padding = unit(0.08, "lines"),
    color = "red3",
    size = 4.8 
  ) -> p

ggsave(
  "AHS-color-map-with-lstar.png",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 18,
  height = 8)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Average_color_map_after_L*_-_outlier_detection.png]]
* Average color map after L* - image correction t24_d
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*

#cam <- "f02_u"
cam <- "t24_d"

min <- 0
if(cam == "t24_d"){
  min <- 0
}else{
  min <- 20
}

data.AHS.adj.lstar %>%
#data.AHS.adj %>%
  filter(Hour <= 8) %>%
  filter(run.level %in% c(0.1, 0.5, 0.9)) %>%
  filter(run.window %in% c(3, 365)) %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  mutate(outlier = if_else(type == "to_adjust", TRUE, FALSE)) %>%
  mutate(alpha = if_else(outlier, 0.0, 1.0)) -> map.df

bind_rows(
  map.df %>%
    mutate(run.level = "Original colors"),

  map.df %>% 
    mutate(r_mean = if_else(outlier, R, r_mean)) %>%
    mutate(g_mean = if_else(outlier, G, g_mean)) %>%
    mutate(b_mean = if_else(outlier, B, b_mean)) %>%
    mutate(run.level = as.character(run.level))

) -> map.df


r <- (map.df$r_mean / 256)
g <- (map.df$g_mean / 256)
b <- (map.df$b_mean / 256)
alp <- (map.df$alpha)

ggplot() +
  geom_tile(data=map.df, aes(x=DOY, y=Hour), fill=rgb(r, g, b), color=rgb(r, g, b)) + 
  theme_bw(base_size=16) +
  theme(
    legend.position = "none",
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(run.window~run.level, scale="free") -> p 

p 

ggsave(
  "color-correction-t24.png",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 18,
  height = 4)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Average_color_map_after_L*_-_image_correction_t24_d.png]]
* Average color map after L* - image correction f02_u - old way
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*

#cam <- "f02_u"
cam <- "t24_d"

min <- 0
if(cam == "t24_d"){
  min <- 0
}else{
  min <- 20
}

data.AHS.adj.lstar %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  filter(run.level == 0.1, run.window == 3) %>%
  mutate(run.level = "Original colors") %>%
  filter(DOY %in% seq(0,400, 5)) -> map.df

r <- (map.df$r_mean / 256)
g <- (map.df$g_mean / 256)
b <- (map.df$b_mean / 256)
alp <- (map.df$alpha)

ggplot() +
  geom_tile(data=map.df, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) + 
  theme_bw(base_size=16) +
  theme(
    legend.position = "none",
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(~run.level, scale="free") -> p 

p 

ggsave(
  "image-correction-f02.png",
  plot = p,
  path = ".",
#  scale = 1,
  width = 18,
  height = 4)
p
#+end_src

#+RESULTS:
[[file:~/R-images/image-Average_color_map_after_L*_-_image_correction_f02_u_-_old_way.png]]


#+begin_src R :results output :session *R-local* :exports both
map.df %>%
    filter(run.level == "Original colors") %>%
    mutate(L = x, a = y, b = z) %>%
    select(run.window, run.level, Camera_ID, DOY, Hour, Minute, L, a, b) -> df.ref

map.df %>%
    filter(run.level != "Original colors") %>%
    mutate(L = ifelse(is.na(x.border), x, x.border),
           a = ifelse(is.na(y.border), y, y.border),
           b = ifelse(is.na(z.border), z, z.border)) %>%
    select(run.window, run.level, Camera_ID, DOY, Hour, Minute, L, a, b) -> df.temp0

df.temp0 %>%
    filter(run.level != "Original colors") %>%
    left_join(
        df.ref %>% select(-run.level, -run.window),
        by=c("Camera_ID", "DOY", "Hour", "Minute"),
        suffix = c(".level", ".ref")) %>%
    mutate(dE = sqrt((L.level - L.ref)^2 + (a.level - a.ref)^2 + (b.level - b.ref)^2)) %>%
    left_join(
        map.df %>%
        filter(run.level != "Original colors") %>%    
        select(run.level, run.window, Camera_ID, DOY, Hour, Minute, r_mean, g_mean, b_mean),
        by = c("run.window", "run.level", "Camera_ID", "DOY", "Hour", "Minute")
    ) %>%
    group_by(run.level, run.window, Camera_ID, DOY, Hour, Minute) -> df.temp1
#+end_src

#+RESULTS:

#+begin_src R :results output :session *R-local* :exports both
df.temp1 %>%
    group_by(run.level, run.window, Camera_ID, DOY, Hour) %>%
    arrange(Minute) %>%
    slice(1) %>%
    ungroup %>%
#    filter(DOY %in% seq(1,400, 10)) %>%
    mutate(dE.alpha = dE/max(dE)) %>%
##    mutate(dE.alpha = if_else(dE.alpha <= 0.24, 0.00, dE.alpha)) %>%
    print -> df.temp2
#+end_src

#+RESULTS:
#+begin_example
# A tibble: 28,314 × 17
   run.window run.level Camera_ID   DOY  Hour Minute L.level a.level b.level
        <
<
    <
    <
<
 <
  <
  <
  <dbl>
 1          3 0.1       f02_u         1     8     20    39.7   0.652   -9.71
 2          3 0.1       f02_u         1     9     20    37.1   0.540   -7.34
 3          3 0.1       f02_u         1    10     20    37.4   1.06    -5.47
 4          3 0.1       f02_u         1    11     20    37.8   1.18    -5.38
 5          3 0.1       f02_u         1    12     20    38.4   1.11    -5.14
 6          3 0.1       f02_u         1    13     20    38.1   1.12    -5.22
 7          3 0.1       f02_u         1    14     20    37.7   0.805   -5.26
 8          3 0.1       f02_u         1    15     20    39.1   0.483   -9.14
 9          3 0.1       f02_u         1    16     20    39.5   2.96   -10.1 
10          3 0.1       f02_u         2     8     20    40.7   0.608   -9.65
# … with 28,304 more rows, and 8 more variables: L.ref <dbl>, a.ref <dbl>,
#   b.ref <dbl>, dE <dbl>, r_mean <dbl>, g_mean <dbl>, b_mean <dbl>,
#   dE.alpha <dbl>
#+end_example

#+begin_src R :results output file graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 600 :height 400 :session *R-local*

r <- (df.temp2$r_mean / 256)
g <- (df.temp2$g_mean / 256)
b <- (df.temp2$b_mean / 256)

ggplot() +
#  geom_tile(data=df.temp2, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
  geom_tile(data=df.temp2, aes(x=DOY, y=Hour, fill=dE.alpha)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(run.window~run.level, scale="free") + #-> p#+
  scale_fill_gradient(low = "white", high = "red", na.value = NA) -> p 
p #+ coord_cartesian(xlim=c(100, 130))
#+end_src

#+RESULTS:
[[file:/var/folders/db/1_7dvppx3njd5cwn593nkgcc0000gn/T/babel-TM7ybw/figurewnQbXD.png]]

#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*
df.temp2 %>% 
#  filter(dE.alpha >= 0.1) %>%
#  filter(between(DOY, 100, 250)) %>%
  filter(between(DOY, 0, 150)) %>%
#  filter(between(Hour, 4, 5)) %>%
  filter(Hour==5) %>%
  filter(DOY %in% seq(0,400, 3)) -> df.temp3

#%>%
#  mutate(Hour = 1) -> df.temp3

r <- (df.temp3$r_mean / 256) 
g <- (df.temp3$g_mean / 256)
b <- (df.temp3$b_mean / 256)

#white <- 0.05
r <- r + white
g <- g + white
b <- b + white

ggplot() +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE.alpha)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  facet_grid(run.window~run.level, scale="free") -> p1

ggplot() +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE.alpha)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  facet_grid(run.window~run.level, scale="free") + #-> p#+
  scale_fill_gradient(low = "white", high = "red", na.value = NA) +
  theme(
    strip.text.x = element_blank()
#    strip.text.y = element_blank()
  ) -> p2  

( p1 + 
  theme(
  axis.title.x=element_blank(),
  axis.text.x=element_blank(),
  axis.ticks.x=element_blank()
  )
) / p2  

#,
#        axis.text.x=element_blank(),
#        axis.ticks.x=element_blank())
#+end_src

#+RESULTS:
[[file:~/R-images/image-Average_color_map_after_L*_-_image_correction_f02_u.png]]

* Average color map after L* - image correction t24_d - with distance
** Original colors
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

#cam <- "f02_u"
cam <- "t24_d"

min <- 0
if(cam == "t24_d"){
  min <- 0
}else{
  min <- 20
}

data.AHS.adj.lstar %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  filter(run.level == 0.1, run.window == 3) %>%
  mutate(run.level = "Color reference") %>%
  filter(DOY %in% seq(0,400, 5)) -> map.df

r <- (map.df$r_mean / 256)
g <- (map.df$g_mean / 256)
b <- (map.df$b_mean / 256)
alp <- (map.df$alpha)

ggplot() +
  geom_tile(data=map.df, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) + 
  theme_bw(base_size=16) +
  theme(
    legend.position = "none",
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(~run.level, scale="free") -> original_colors

original_colors
#+end_src

#+RESULTS:
[[file:~/R-images/image-Original_colors.png]]

** Make dataframe
#+begin_src R :results output :session *R-local* :exports both

data.AHS.adj.lstar %>%
#data.AHS.adj %>%
#  filter(Hour <= 8) %>%
  filter(run.level %in% c(0.1, 0.5, 0.9)) %>%
  filter(run.window %in% c(3, 365)) %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  mutate(outlier = if_else(type == "to_adjust", TRUE, FALSE)) %>%
  mutate(alpha = if_else(outlier, 0.0, 1.0)) -> map.df

bind_rows(
  map.df %>%
    filter(run.level == 0.1) %>%
    mutate(run.level = "Original colors"),

  map.df %>% 
    mutate(r_mean = if_else(outlier, R, r_mean)) %>%
    mutate(g_mean = if_else(outlier, G, g_mean)) %>%
    mutate(b_mean = if_else(outlier, B, b_mean)) %>%
    mutate(run.level = as.character(run.level))

) -> map.df

map.df %>%
    filter(run.level == "Original colors") %>%
    mutate(L = x, a = y, b = z) %>%
    select(run.window, run.level, Camera_ID, DOY, Hour, Minute, L, a, b) -> df.ref

map.df %>%
    filter(run.level != "Original colors") %>%
    mutate(L = ifelse(is.na(x.border), x, x.border),
           a = ifelse(is.na(y.border), y, y.border),
           b = ifelse(is.na(z.border), z, z.border)) %>%
    select(run.window, run.level, Camera_ID, DOY, Hour, Minute, L, a, b) -> df.temp0

df.temp0 %>%
    filter(run.level != "Original colors") %>%
    left_join(
        df.ref %>% select(-run.level, -run.window),
        by=c("Camera_ID", "DOY", "Hour", "Minute"),
        suffix = c(".level", ".ref")) %>%
    mutate(dE = sqrt((L.level - L.ref)^2 + (a.level - a.ref)^2 + (b.level - b.ref)^2)) %>%
    left_join(
        map.df %>%
        filter(run.level != "Original colors") %>%    
        select(run.level, run.window, Camera_ID, DOY, Hour, Minute, r_mean, g_mean, b_mean),
        by = c("run.window", "run.level", "Camera_ID", "DOY", "Hour", "Minute")
    ) %>%
    group_by(run.level, run.window, Camera_ID, DOY, Hour, Minute) -> df.temp1

df.temp1 %>%
    group_by(run.level, run.window, Camera_ID, DOY, Hour) %>%
    arrange(Minute) %>%
    slice(1) %>%
    ungroup %>%
#    filter(DOY %in% seq(1,400, 3)) %>%
    mutate(dE.alpha = dE/max(dE)) %>%
##    mutate(dE.alpha = if_else(dE.alpha <= 0.24, 0.00, dE.alpha)) %>%
    print -> df.temp2
#+end_src

#+RESULTS:
#+begin_example
# A tibble: 27,468 × 17
   run.window run.level Camera_ID   DOY  Hour Minute L.level a.level b.level
        <
<
    <
    <
<
 <
  <
  <
  <dbl>
 1          3 0.1       t24_d         1     8      0    43.8   0.111  -2.91 
 2          3 0.1       t24_d         1     9      0    45.0  -1.23   -2.59 
 3          3 0.1       t24_d         1    10      0    45.8  -1.03   -0.245
 4          3 0.1       t24_d         1    11      0    45.2  -0.863   0.739
 5          3 0.1       t24_d         1    12      0    44.8  -0.713   1.21 
 6          3 0.1       t24_d         1    13      0    44.7  -0.725   1.34 
 7          3 0.1       t24_d         1    14      0    45.1  -0.854   0.847
 8          3 0.1       t24_d         1    15      0    45.0  -0.918   1.02 
 9          3 0.1       t24_d         1    16      0    44.0  -1.30   -2.47 
10          3 0.1       t24_d         2     8      0    43.0   0.352  -2.17 
# … with 27,458 more rows, and 8 more variables: L.ref <dbl>, a.ref <dbl>,
#   b.ref <dbl>, dE <dbl>, r_mean <dbl>, g_mean <dbl>, b_mean <dbl>,
#   dE.alpha <dbl>
#+end_example

** F02 distance plot
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*
df.temp2 %>% 
  filter(DOY %in% seq(0,400, 5)) -> df.temp3

#%>%
#  mutate(Hour = 1) -> df.temp3

r <- (df.temp3$r_mean / 256) 
g <- (df.temp3$g_mean / 256)
b <- (df.temp3$b_mean / 256)

#white <- 0
#r <- r + white
#g <- g + white
#b <- b + white

ggplot() +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(run.window~run.level, scale="free") + #-> p#+
  labs(fill="Distance") +
  theme(
    plot.margin=unit(c(1,0.5,0.5,0.5),"cm"),
    legend.position = c(0.5, 1.25),
    legend.direction="horizontal",
#    legend.key.size = unit(0.5, 'cm'), #change legend key size
    legend.key.height = unit(0.2, 'cm'), #change legend key height
    legend.key.width = unit(1, 'cm'), #change legend key width
    legend.title = element_text(size=10), #change legend title font size
    legend.text = element_text(size=8)
  ) + 
  scale_fill_gradient(low = "white", high = "red", na.value = NA) -> p  

layout <- "
##BBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
AABBBB
##BBBB
"
p <- original_colors + p + plot_layout(design = layout)

ggsave(
  "color-correction-distance.png",
  plot = p,
  path = "./../images/results",
#  scale = 1,
  width = 8,
  height = 4.5)

#,
#        axis.text.x=element_blank(),
#        axis.ticks.x=element_blank())
#+end_src

#+RESULTS:
[[file:~/R-images/image-F02_distance_plot.png]]

** Reference colors at 5 am
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*
data.AHS.adj.lstar %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  filter(run.level == 0.1, run.window==3) %>%
  mutate(run.level = "Color reference") %>%
  filter(between(DOY, 0, 150)) %>%
  filter(Hour==5) %>%
  filter(DOY %in% seq(0,150, 3)) -> df.temp3

r <- (df.temp3$r_mean / 256) 
g <- (df.temp3$g_mean / 256)
b <- (df.temp3$b_mean / 256)

#white <- 0.05
#r <- r + white
#g <- g + white
#b <- b + white

ggplot() +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE.alpha)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  theme(
    axis.title.x=element_blank(),
    axis.text.x=element_blank(),
    axis.ticks.x=element_blank()
  ) + 
  facet_grid(~run.level, scale="free") -> ref_colors

ref_colors

#+end_src

#+RESULTS:
[[file:~/R-images/image-Reference_colors_at_5_am.png]]
** Behavior at 5 am
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*
df.temp2 %>% 
  filter(between(DOY, 0, 150)) %>%
  filter(Hour==5) %>%
  filter(DOY %in% seq(0,150, 3)) -> df.temp3

#%>%
#  mutate(Hour = 1) -> df.temp3

r <- (df.temp3$r_mean / 256) 
g <- (df.temp3$g_mean / 256)
b <- (df.temp3$b_mean / 256)

#white <- 0.05
#r <- r + white
#g <- g + white
#b <- b + white

ggplot() +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE.alpha)) +
  theme_bw(base_size=16) +
  theme(
    plot.margin=unit(c(0.1,1.6,0.1,0.5),"cm"),
    panel.spacing=unit(0.2, "lines"),
    panel.margin=unit(0.2, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  facet_grid(run.window~run.level, scale="free") -> p1

ggplot() +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.2, "lines"),
    panel.margin=unit(0.2, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0), breaks=c(94, 110, 125, 140), labels=c(94, 110, 125, 140)) +
  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  facet_grid(run.window~run.level, scale="free") + #-> p#+
  labs(fill="Distance") +
  theme(
    plot.margin=unit(c(0.1,1.6,0.1,0.5),"cm"),
    legend.position = c(1.12 , 0.5),
    legend.direction="vertical",
#    legend.key.size = unit(0.5, 'cm'), #change legend key size
    legend.key.height = unit(0.5, 'cm'), #change legend key height
    legend.key.width = unit(0.5, 'cm'), #change legend key width
    legend.title = element_text(size=10), #change legend title font size
    legend.text = element_text(size=8)
  ) + 
  scale_fill_gradient(low = "white", high = "red", na.value = NA)-> p2  #+
#  theme(
#    strip.text.x = element_blank()
##    strip.text.y = element_blank()
#  ) -> p2  

ggplot() +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
  geom_point(data=df.temp3 %>% mutate(dE = if_else(is.na(dE), 0, dE)), aes(x=DOY, y=dE)) +
  geom_line(data=df.temp3 %>% mutate(dE = if_else(is.na(dE), 0, dE)), aes(x=DOY, y=dE)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.2, "lines"),
    panel.margin=unit(0.2, "lines"),
#    panel.grid.major = element_blank(), 
#    panel.grid.minor = element_blank()
) +
#  scale_x_continuous(breaks=c(94, 110, 125, 140), labels=c(94, 110, 125, 140)) +
#  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  ylim(-0.5, 31) + 
  facet_grid(run.window~run.level, scale="free") + #-> p#+
  labs(y="Distance") -> p3


layout <- "
A##
BBB
BBB
CCC
CCC
"
#p3 

p <- (
  (ref_colors + theme(    plot.margin=unit(c(0.1,0.2,0.1,0.0),"cm"))) /
#  ref_colors /
  ( p1 + 
    theme(
    axis.title.x=element_blank(),
    axis.text.x=element_blank(),
    axis.ticks.x=element_blank()
    )
  ) / p3  
) + plot_layout(design = layout)

ggsave(
  "color-correction-colors.png",
  plot = p,
  path = "./../images/results",
#  scale = 1,
  width = 8,
  height = 6)
#,
#        axis.text.x=element_blank(),
#        axis.ticks.x=element_blank())
#+end_src

#+RESULTS:
[[file:~/R-images/image-Behavior_at_5_am.png]]

* Average color map after L* - image correction f02_u - with distance
** Original colors
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 600 :height 400 :session *R-local*

cam <- "f02_u"
#cam <- "t24_d"

min <- 0
if(cam == "t24_d"){
  min <- 0
}else{
  min <- 20
}

data.AHS.adj.lstar %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  filter(run.level == 0.1, run.window == 3) %>%
  mutate(run.level = "Original colors") %>%
  filter(DOY %in% seq(0,400, 5)) -> map.df

r <- (map.df$r_mean / 256)
g <- (map.df$g_mean / 256)
b <- (map.df$b_mean / 256)
alp <- (map.df$alpha)

ggplot() +
  geom_tile(data=map.df, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) + 
  theme_bw(base_size=16) +
  theme(
    legend.position = "none",
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(~run.level, scale="free") -> original_colors

original_colors
#+end_src

#+RESULTS:
[[file:~/R-images/image-Original_colors.png]]

** Make dataframe
#+begin_src R :results output :session *R-local* :exports both

data.AHS.adj.lstar %>%
#data.AHS.adj %>%
#  filter(Hour <= 8) %>%
  filter(run.level %in% c(0.1, 0.5, 0.9)) %>%
  filter(run.window %in% c(3, 365)) %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  mutate(outlier = if_else(type == "to_adjust", TRUE, FALSE)) %>%
  mutate(alpha = if_else(outlier, 0.0, 1.0)) -> map.df

bind_rows(
  map.df %>%
    filter(run.level == 0.1) %>%
    mutate(run.level = "Original colors"),

  map.df %>% 
    mutate(r_mean = if_else(outlier, R, r_mean)) %>%
    mutate(g_mean = if_else(outlier, G, g_mean)) %>%
    mutate(b_mean = if_else(outlier, B, b_mean)) %>%
    mutate(run.level = as.character(run.level))

) -> map.df

map.df %>%
    filter(run.level == "Original colors") %>%
    mutate(L = x, a = y, b = z) %>%
    select(run.window, run.level, Camera_ID, DOY, Hour, Minute, L, a, b) -> df.ref

map.df %>%
    filter(run.level != "Original colors") %>%
    mutate(L = ifelse(is.na(x.border), x, x.border),
           a = ifelse(is.na(y.border), y, y.border),
           b = ifelse(is.na(z.border), z, z.border)) %>%
    select(run.window, run.level, Camera_ID, DOY, Hour, Minute, L, a, b) -> df.temp0

df.temp0 %>%
    filter(run.level != "Original colors") %>%
    left_join(
        df.ref %>% select(-run.level, -run.window),
        by=c("Camera_ID", "DOY", "Hour", "Minute"),
        suffix = c(".level", ".ref")) %>%
    mutate(dE = sqrt((L.level - L.ref)^2 + (a.level - a.ref)^2 + (b.level - b.ref)^2)) %>%
    left_join(
        map.df %>%
        filter(run.level != "Original colors") %>%    
        select(run.level, run.window, Camera_ID, DOY, Hour, Minute, r_mean, g_mean, b_mean),
        by = c("run.window", "run.level", "Camera_ID", "DOY", "Hour", "Minute")
    ) %>%
    group_by(run.level, run.window, Camera_ID, DOY, Hour, Minute) -> df.temp1

df.temp1 %>%
    group_by(run.level, run.window, Camera_ID, DOY, Hour) %>%
    arrange(Minute) %>%
    slice(1) %>%
    ungroup %>%
#    filter(DOY %in% seq(1,400, 3)) %>%
    mutate(dE.alpha = dE/max(dE)) %>%
##    mutate(dE.alpha = if_else(dE.alpha <= 0.24, 0.00, dE.alpha)) %>%
    print -> df.temp2
#+end_src

#+RESULTS:
#+begin_example
# A tibble: 28,314 × 17
   run.window run.level Camera_ID   DOY  Hour Minute L.level a.level b.level
        <
<
    <
    <
<
 <
  <
  <
  <dbl>
 1          3 0.1       f02_u         1     8     20    39.7   0.652   -9.71
 2          3 0.1       f02_u         1     9     20    37.1   0.540   -7.34
 3          3 0.1       f02_u         1    10     20    37.4   1.06    -5.47
 4          3 0.1       f02_u         1    11     20    37.8   1.18    -5.38
 5          3 0.1       f02_u         1    12     20    38.4   1.11    -5.14
 6          3 0.1       f02_u         1    13     20    38.1   1.12    -5.22
 7          3 0.1       f02_u         1    14     20    37.7   0.805   -5.26
 8          3 0.1       f02_u         1    15     20    39.1   0.483   -9.14
 9          3 0.1       f02_u         1    16     20    39.5   2.96   -10.1 
10          3 0.1       f02_u         2     8     20    40.7   0.608   -9.65
# … with 28,304 more rows, and 8 more variables: L.ref <dbl>, a.ref <dbl>,
#   b.ref <dbl>, dE <dbl>, r_mean <dbl>, g_mean <dbl>, b_mean <dbl>,
#   dE.alpha <dbl>
#+end_example

** F02 distance plot
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*
df.temp2 %>% 
  filter(DOY %in% seq(0,400, 5)) -> df.temp3

#%>%
#  mutate(Hour = 1) -> df.temp3

r <- (df.temp3$r_mean / 256) 
g <- (df.temp3$g_mean / 256)
b <- (df.temp3$b_mean / 256)

#white <- 0
#r <- r + white
#g <- g + white
#b <- b + white

ggplot() +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_grid(run.window~run.level, scale="free") + #-> p#+
  scale_fill_gradient(low = "white", high = "red", na.value = NA) -> p  

layout <- "
AABBBB
AABBBB
##BBBB
"
original_colors + p + plot_layout(design = layout)

#,
#        axis.text.x=element_blank(),
#        axis.ticks.x=element_blank())
#+end_src

#+RESULTS:
[[file:~/R-images/image-F02_distance_plot.png]]

** Reference colors at 5 am
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*
data.AHS.adj.lstar %>%
  rename(DOY = doy) %>%
  filter(Camera_ID == cam) %>%
  filter(Minute == min) %>%
  filter(run.level == 0.1, run.window==3) %>%
  mutate(run.level = "Color reference") %>%
  filter(between(DOY, 0, 150)) %>%
  filter(Hour==5) %>%
  filter(DOY %in% seq(0,400, 3)) -> df.temp3

r <- (df.temp3$r_mean / 256) 
g <- (df.temp3$g_mean / 256)
b <- (df.temp3$b_mean / 256)

#white <- 0.05
#r <- r + white
#g <- g + white
#b <- b + white

ggplot() +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE.alpha)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  theme(
    axis.title.x=element_blank(),
    axis.text.x=element_blank(),
    axis.ticks.x=element_blank()
  ) + 
  facet_grid(~run.level, scale="free") -> ref_colors

ref_colors

#+end_src

#+RESULTS:
[[file:~/R-images/image-Reference_colors_at_5_am.png]]
** Behavior at 5 am
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*
df.temp2 %>% 
  filter(between(DOY, 0, 150)) %>%
  filter(Hour==5) %>%
  filter(DOY %in% seq(0,400, 3)) -> df.temp3

#%>%
#  mutate(Hour = 1) -> df.temp3

r <- (df.temp3$r_mean / 256) 
g <- (df.temp3$g_mean / 256)
b <- (df.temp3$b_mean / 256)

#white <- 0.05
#r <- r + white
#g <- g + white
#b <- b + white

ggplot() +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE.alpha)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  facet_grid(run.window~run.level, scale="free") -> p1

ggplot() +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour), fill=rgb(r, g, b)) +
#  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, alpha=dE.alpha), fill=rgb(r, g, b)) +
  geom_tile(data=df.temp3, aes(x=DOY, y=Hour, fill=dE)) +
  theme_bw(base_size=16) +
  theme(
    panel.spacing=unit(0.4, "lines"),
    panel.margin=unit(0.4, "lines"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()
) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0), breaks=c(5), labels=c(5)) +
  facet_grid(run.window~run.level, scale="free") + #-> p#+
  labs(fill="Distance") +
  scale_fill_gradient(low = "white", high = "red", na.value = NA)-> p2  #+
#  theme(
#    strip.text.x = element_blank()
##    strip.text.y = element_blank()
#  ) -> p2  


layout <- "
A##
BBB
BBB
CCC
CCC
"

(
  ref_colors /
  ( p1 + 
    theme(
    axis.title.x=element_blank(),
    axis.text.x=element_blank(),
    axis.ticks.x=element_blank()
    )
  ) / p2  
) + plot_layout(design = layout)

#,
#        axis.text.x=element_blank(),
#        axis.ticks.x=element_blank())
#+end_src

#+RESULTS:
[[file:~/R-images/image-Behavior_at_5_am.png]]

* Impacts on P90
** AHS
*** Manual Filter x Lstar p90
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*
bind_rows(

data.AHS.bigger %>%
  mutate(cam = paste0(Camera_ID)) %>%
  group_by(cam) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Original"),

data.AHS.bigger %>%
  filter(L_mean > 10) %>%
  mutate(cam = paste0(Camera_ID)) %>%
  group_by(cam) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.AHS.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  mutate(cam = paste0(Camera_ID)) %>%
  group_by(cam) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

) %>%
    ggplot(aes(x=DOY, y = p90)) +
    geom_line() +
    geom_point() +
#    theme(legend.position = "none") +
    xlab("DOY") + 
    theme_bw(base_size=16) +
    facet_grid(cam~Type) -> p
#    facet_wrap(~NewType, scale="free")

p

#ggsave(
#  "AHS-p90-lfilter_manual.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 6,
#  height = 3)
#+end_src

#+RESULTS:
[[file:~/R-images/image-Manual_Filter_x_Lstar_p90.png]]
*** Adjusted x L* Filter - Adjusted
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

#camera <- "f02_u"
#camera <- "t24_d"

bind_rows(

data.AHS.bigger.p90 %>%
  # TO PLOT:
#  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
  #      (run.window == 365 & run.level <= 0.6) |
  #      (run.window == 100 & run.level <= 0.3) |
        (run.window %in% c(3) & run.level >= 0.05)
  #      (run.window %in% c(3, 5, 10))
  ) %>%
  rename(p90 = p90.merged.gcc) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

#AHS.LAB.after_L.p90 %>%
data.AHS.bigger.p90.lstar %>%
#  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level >= 0.05)
#        (run.window %in% c(3, 5, 10))
  ) %>%
  rename(p90 = p90.merged.gcc) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#filter(NewType != "OneShot") %>%
#   mutate(Type = gsub(".*\\.", "", Type)) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
#   filter(grepl("Filter", NewType) == TRUE) %>%
#    rowwise() %>%
#    filter(NewType == "L* Filter" || NewType == "L* Filter - Adjusted") %>%
#    mutate(NewType = paste0()) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.5) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
#    coord_cartesian (xlim=c(150, 300))  +
    facet_grid(NewType~Camera_ID) -> p

p

#ggsave(
#  "AHS-p90-adjusted.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 8,
#  height = 3)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L*_Filter_-_Adjusted.png]]
*** Compare the best results
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

camera <- "f02_u"
#camera <- "t24_d"

bind_rows(

data.AHS.bigger %>%
  filter(Camera_ID == camera) %>%
  mutate(in_L_range = between(L_mean, 2, 99)) %>%
  filter(in_L_range == TRUE) %>%
  p90_aggregation_simple() %>%
  mutate(Type = "L* Filter"),

data.AHS.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  filter(Camera_ID == camera) %>%
  p90_aggregation_simple() %>%
    mutate(Type = "Manual Filter"),

data.AHS.bigger.p90 %>%
  # TO PLOT:
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level <= 0.1)
  ) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  mutate(Type = paste("Adjusted", Code, sep=":")) %>%
  select(-Code, -contains("run"))
,

data.AHS.bigger.p90.lstar %>%
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level == 0.6)
  ) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  mutate(Type = paste("L* - Adjusted", Code, sep=":")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#filter(NewType != "OneShot") %>%
#   mutate(Type = gsub(".*\\.", "", Type)) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
#   filter(grepl("Filter", NewType) == TRUE) %>%
#    rowwise() %>%
#    filter(NewType == "L* Filter" || NewType == "L* Filter - Adjusted") %>%
#    mutate(NewType = paste0()) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line() +
#    geom_point() +
    scale_color_brewer(palette="Set1") +
    labs(color='Case')  +
    xlab("DOY") + 
    theme_bw(base_size=16)  +
    theme(
      legend.position = c(0.13, 0.8),
#      legend.key.size = unit(0.10, 'cm'),
      legend.key.size = unit(0.5, 'cm'),
      legend.title = element_text(size=15),
      legend.text = element_text(size=14)
    ) -> p

p 

#ggsave(
#  "AHS-p90-best-results.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 7,
#  height = 3)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Compare_the_best_results.png]]


*** Adjusted x L Filter - Adjusted - local window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.AHS.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 3 
  ) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.AHS.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 3 
  ) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line() +
    geom_point() +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
#    scale_color_brewer(palette="Spectral") +
#    scale_color_brewer(palette="Set1") +
    scale_color_brewer(palette="RdYlGn") +
    facet_grid(Camera_ID~NewType) -> p

#p

#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(0, 100) + theme(legend.position = "none"))

ggsave(
  "AHS-p90-adjusted-local.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 10,
  height = 4)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L_Filter_-_Adjusted_-_local_window.png]]
*** Adjusted x L Filter - Adjusted - global window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.AHS.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 365 
  ) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.AHS.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 365 
  ) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line() +
    geom_point() +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    scale_color_brewer(palette="RdYlGn") +
    facet_grid(Camera_ID~NewType) -> p

#p
#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(0, 200) + theme(legend.position = "none") )

ggsave(
  "AHS-p90-adjusted-global.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 10,
  height = 4)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L_Filter_-_Adjusted_-_global_window.png]]
*** Best results - local window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.AHS.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

data.AHS.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.AHS.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 3 & run.level == 0.1)
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.AHS.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 3 & run.level == 0.5)
  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) +
    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="Set1") +
    facet_wrap(~Camera_ID, scales="free_y") -> p

plot <- (p + theme(axis.title.x=element_blank())) / 
(p + xlim(100, 200) + theme(legend.position = "none") ) #/ 
#(p + xlim(100, 300) + theme(legend.position = "none") ) 

ggsave(
  "AHS-p90-adjusted-best-local.pdf",
  plot = plot,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_local_window.png]]
*** Best results - global window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

bind_rows(

data.AHS.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

data.AHS.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.AHS.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.5)
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.AHS.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.9)
  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) + 
    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="Set1") +
    facet_wrap(~Camera_ID, scales="free") -> p

plot <- (p + theme(axis.title.x=element_blank())) / 
(p + xlim(100, 200) + theme(legend.position = "none") )

ggsave(
  "AHS-p90-adjusted-best-global.pdf",
  plot = plot,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_global_window.png]]
*** Best results - all
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

bind_rows(

data.AHS.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

#data.AHS.bigger %>%
#  filter(L_mean > 10) %>%
#  group_by(Camera_ID) %>%
#  group_modify(~p90_aggregation_simple(.x)) %>%
#  mutate(Type = "L* Filter"),

data.AHS.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.4 & DOY < 363) | 
    (run.window == 3 & run.level == 0.1)  
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.AHS.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 
  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) + 
#    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="Set1") +
    facet_grid(rows=vars(Camera_ID), scales="free") -> p

#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(100, 200) + theme(legend.position = "none") )

p

#ggsave(
#  "AHS-p90-adjusted-best.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images/results",
##  scale = 1,
#  width = 12,
#  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_all.png]]

** GDK
*** Manual Filter x Lstar p90
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

camera <- "f02_u"
#camera <- "t24_d"

bind_rows(

#AHS.metrics %>%
data.GDK.bigger %>%
  filter(Camera_ID == camera) %>%
  mutate(in_L_range = between(L_mean, 2, 99)) %>%
  filter(in_L_range == TRUE) %>%
#  rename(doy=Day, year=Year) %>%
  p90_aggregation_simple() %>%
  mutate(Type = "L* Filter"),

data.GDK.bigger %>%
  filter(between(Hour, 8, 16)) %>%
  filter(Camera_ID == camera) %>%
#  rename(doy=DOY, year=Year) %>%
  p90_aggregation_simple() %>%
#    select(-year, -order) %>%
    mutate(Type = "Manual Filter"),

#AHS.metrics %>%
#  filter(between(Hour, 8, 15)) %>%
#  filter(Camera_ID == camera) %>%
#  rename(doy=Day, year=Year) %>%
#  p90_aggregation_simple() %>%
#    select(-year, -order) %>%
#    mutate(Type = "Original")

) %>%
    ggplot(aes(x=DOY, y = p90)) +
    geom_line() +
    geom_point() +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "none") +
#    coord_cartesian (xlim=c(150, 300))  +
    xlab("DOY") + 
    facet_wrap(~Type) -> p
#    facet_wrap(~NewType, scale="free")

p

#ggsave(
#  "AHS-p90-lfilter_manual.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 6,
#  height = 3)
#+end_src

#+RESULTS:
[[file:~/R-images/image-Manual_Filter_x_Lstar_p90.png]]
*** Adjusted x L* Filter - Adjusted
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

camera <- "f02_u"
#camera <- "t24_d"

bind_rows(

data.GDK.bigger.p90 %>%
  # TO PLOT:
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
  #      (run.window == 365 & run.level <= 0.6) |
  #      (run.window == 100 & run.level <= 0.3) |
        (run.window %in% c(3) & run.level >= 0.05)
  #      (run.window %in% c(3, 5, 10))
  ) %>%
  rename(p90 = p90.merged.gcc) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

#AHS.LAB.after_L.p90 %>%
data.GDK.bigger.p90.lstar %>%
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level >= 0.05)
#        (run.window %in% c(3, 5, 10))
  ) %>%
  rename(p90 = p90.merged.gcc) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#filter(NewType != "OneShot") %>%
#   mutate(Type = gsub(".*\\.", "", Type)) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
#   filter(grepl("Filter", NewType) == TRUE) %>%
#    rowwise() %>%
#    filter(NewType == "L* Filter" || NewType == "L* Filter - Adjusted") %>%
#    mutate(NewType = paste0()) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.5) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
#    coord_cartesian (xlim=c(150, 300))  +
    facet_wrap(~NewType) -> p

p

#ggsave(
#  "AHS-p90-adjusted.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 8,
#  height = 3)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L*_Filter_-_Adjusted.png]]
*** Compare the best results
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

#camera <- "f02_u"
camera <- "e21_d"
#camera <- "f02_u"

bind_rows(

data.GDK.bigger %>%
  filter(Camera_ID == camera) %>%
  mutate(in_L_range = between(L_mean, 11, 100)) %>%
  filter(in_L_range == TRUE) %>%
  p90_aggregation_simple() %>%
  mutate(Type = "L* Filter"),

data.GDK.bigger %>%
  filter(between(Hour, 8, 16)) %>%
  filter(Camera_ID == camera) %>%
  p90_aggregation_simple() %>%
    mutate(Type = "Manual Filter"),

data.GDK.bigger.p90 %>%
  # TO PLOT:
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level <= 0.1)
  ) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  mutate(Type = paste("Adjusted", Code, sep=":")) %>%
  select(-Code, -contains("run"))
,

data.GDK.bigger.p90.lstar %>%
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level == 0.6)
  ) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  mutate(Type = paste("L* - Adjusted", Code, sep=":")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#filter(NewType != "OneShot") %>%
#   mutate(Type = gsub(".*\\.", "", Type)) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
#   filter(grepl("Filter", NewType) == TRUE) %>%
#    rowwise() %>%
#    filter(NewType == "L* Filter" || NewType == "L* Filter - Adjusted") %>%
#    mutate(NewType = paste0()) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line() +
#    geom_point() +
    scale_color_brewer(palette="Set1") +
    labs(color='Case')  +
    xlab("DOY") + 
    theme_bw(base_size=16)  +
    theme(
      legend.position = c(0.13, 0.8),
      legend.key.size = unit(0.10, 'cm'),
      legend.title = element_text(size=8),
      legend.text = element_text(size=7)
    ) -> p

p 

#ggsave(
#  "AHS-p90-best-results.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 7,
#  height = 3)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Compare_the_best_results.png]]


*** Adjusted x L Filter - Adjusted - local window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.GDK.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 3 
  ) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.GDK.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 3 
  ) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line() +
    geom_point() +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    scale_color_brewer(palette="RdYlGn") +
    facet_grid(Camera_ID~NewType) -> p

#p

#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(250, 365) + theme(legend.position = "none"))

ggsave(
  "GDK-p90-adjusted-local.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 10,
  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L_Filter_-_Adjusted_-_local_window.png]]
*** Adjusted x L Filter - Adjusted - global window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.GDK.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 365 
  ) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.GDK.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 365 
  ) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line() +
    geom_point() +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    scale_color_brewer(palette="RdYlGn") +
    facet_grid(Camera_ID~NewType, scale="free") -> p

#p
#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(100, 200) + theme(legend.position = "none") )

ggsave(
  "GDK-p90-adjusted-global.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 10,
  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L_Filter_-_Adjusted_-_global_window.png]]
*** Best results - local window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.GDK.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

data.GDK.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.GDK.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 3 & run.level == 0.2)
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.GDK.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 3 & run.level == 0.7)
  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) +
    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="Set1") +
    facet_wrap(~Camera_ID, scales="free_y") -> p

plot <- (p + theme(axis.title.x=element_blank())) / 
(p + xlim(100, 200) + theme(legend.position = "none") ) #/ 
#(p + xlim(100, 300) + theme(legend.position = "none") ) 

ggsave(
  "GDK-p90-adjusted-best-local.pdf",
  plot = plot,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_local_window.png]]
*** Best results - global window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

bind_rows(

data.GDK.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

data.GDK.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.GDK.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.6)
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.GDK.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.5)
  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) + 
    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="Set1") +
    facet_wrap(~Camera_ID, scales="free") -> p

plot <- (p + theme(axis.title.x=element_blank())) / 
(p + xlim(100, 200) + theme(legend.position = "none") )

ggsave(
  "GDK-p90-adjusted-best-global.pdf",
  plot = plot,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_global_window.png]]
*** Best results - all
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

bind_rows(

data.GDK.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

data.GDK.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.GDK.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.6) |
    (run.window == 3 & run.level == 0.2) 
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.GDK.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 

  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.8) +
#    geom_point(alpha=0.2) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) + 
#    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="Set1") +
    facet_grid(rows=vars(Camera_ID), scales="free") -> p

#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(100, 200) + theme(legend.position = "none") )

ggsave(
  "GDK-p90-adjusted-best.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 10,
  height = 8)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_all.png]]
** PEG
*** Manual Filter x Lstar p90
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

camera <- "f02_u"
#camera <- "t24_d"

bind_rows(

#AHS.metrics %>%
data.PEG.bigger %>%
  filter(Camera_ID == camera) %>%
  mutate(in_L_range = between(L_mean, 2, 99)) %>%
  filter(in_L_range == TRUE) %>%
#  rename(doy=Day, year=Year) %>%
  p90_aggregation_simple() %>%
  mutate(Type = "L* Filter"),

data.PEG.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  filter(Camera_ID == camera) %>%
#  rename(doy=DOY, year=Year) %>%
  p90_aggregation_simple() %>%
#    select(-year, -order) %>%
    mutate(Type = "Manual Filter"),

#AHS.metrics %>%
#  filter(between(Hour, 8, 15)) %>%
#  filter(Camera_ID == camera) %>%
#  rename(doy=Day, year=Year) %>%
#  p90_aggregation_simple() %>%
#    select(-year, -order) %>%
#    mutate(Type = "Original")

) %>%
    ggplot(aes(x=DOY, y = p90)) +
    geom_line() +
    geom_point() +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "none") +
#    coord_cartesian (xlim=c(150, 300))  +
    xlab("DOY") + 
    facet_wrap(~Type) -> p
#    facet_wrap(~NewType, scale="free")

p

#ggsave(
#  "AHS-p90-lfilter_manual.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 6,
#  height = 3)
#+end_src

#+RESULTS:
[[file:~/R-images/image-Manual_Filter_x_Lstar_p90.png]]
*** Adjusted x L* Filter - Adjusted
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

camera <- "f02_u"
#camera <- "t24_d"

bind_rows(

data.PEG.bigger.p90 %>%
  # TO PLOT:
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
  #      (run.window == 365 & run.level <= 0.6) |
  #      (run.window == 100 & run.level <= 0.3) |
        (run.window %in% c(3) & run.level >= 0.05)
  #      (run.window %in% c(3, 5, 10))
  ) %>%
  rename(p90 = p90.merged.gcc) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

#AHS.LAB.after_L.p90 %>%
data.PEG.bigger.p90.lstar %>%
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level >= 0.05)
#        (run.window %in% c(3, 5, 10))
  ) %>%
  rename(p90 = p90.merged.gcc) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#filter(NewType != "OneShot") %>%
#   mutate(Type = gsub(".*\\.", "", Type)) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
#   filter(grepl("Filter", NewType) == TRUE) %>%
#    rowwise() %>%
#    filter(NewType == "L* Filter" || NewType == "L* Filter - Adjusted") %>%
#    mutate(NewType = paste0()) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.5) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
#    coord_cartesian (xlim=c(150, 300))  +
    facet_wrap(~NewType) -> p

p

#ggsave(
#  "AHS-p90-adjusted.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 8,
#  height = 3)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L*_Filter_-_Adjusted.png]]
*** Compare the best results
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

camera <- "peg"

bind_rows(

data.PEG.bigger %>%
  filter(Camera_ID == camera) %>%
  mutate(in_L_range = between(L_mean, 2, 99)) %>%
  filter(in_L_range == TRUE) %>%
  p90_aggregation_simple() %>%
  mutate(Type = "L* Filter"),

data.PEG.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  filter(Camera_ID == camera) %>%
  p90_aggregation_simple() %>%
    mutate(Type = "Manual Filter"),

data.PEG.bigger.p90 %>%
  # TO PLOT:
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level <= 0.1)
  ) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  mutate(Type = paste("Adjusted", Code, sep=":")) %>%
  select(-Code, -contains("run"))
,

data.PEG.bigger.p90.lstar %>%
  filter(Camera_ID == camera) %>%
  select(doy, p90.merged.gcc, run.level, run.window) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  filter(
        (run.window %in% c(3) & run.level == 0.6)
  ) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  mutate(Type = paste("L* - Adjusted", Code, sep=":")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#filter(NewType != "OneShot") %>%
#   mutate(Type = gsub(".*\\.", "", Type)) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
#   filter(grepl("Filter", NewType) == TRUE) %>%
#    rowwise() %>%
#    filter(NewType == "L* Filter" || NewType == "L* Filter - Adjusted") %>%
#    mutate(NewType = paste0()) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line() +
#    geom_point() +
    scale_color_brewer(palette="Set1") +
    labs(color='Case')  +
    xlab("DOY") + 
    theme_bw(base_size=16)  +
    theme(
      legend.position = c(0.13, 0.8),
#      legend.key.size = unit(0.10, 'cm'),
      legend.key.size = unit(0.5, 'cm'),
      legend.title = element_text(size=15),
      legend.text = element_text(size=14)
    ) -> p

p 

#ggsave(
#  "AHS-p90-best-results.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images",
##  scale = 1,
#  width = 7,
#  height = 3)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Compare_the_best_results.png]]


*** Adjusted x L Filter - Adjusted - local window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.PEG.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 3 
  ) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.PEG.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 3 
  ) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.5) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    scale_color_brewer(palette="RdYlGn") +
    facet_grid(Camera_ID~NewType) -> p

#p

#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(230, 320) + theme(legend.position = "none"))

ggsave(
  "PEG-p90-adjusted-local.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 10,
  height = 4)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L_Filter_-_Adjusted_-_local_window.png]]
*** Adjusted x L Filter - Adjusted - global window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.PEG.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 365 
  ) %>%
  mutate(Type = paste("P90", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.PEG.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc) %>%
  filter(
    run.window == 365 
  ) %>%
  mutate(Type = paste("after_Lstar", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=doy, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.5) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(150, 300)
#    theme(legend.position = "") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    scale_color_brewer(palette="RdYlGn") +
    facet_grid(Camera_ID~NewType, scale="free") -> p

#p
#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(250, 365) + theme(legend.position = "none") )

ggsave(
  "PEG-p90-adjusted-global.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 10,
  height = 4)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Adjusted_x_L_Filter_-_Adjusted_-_global_window.png]]
*** Best results - local window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 800 :session *R-local*

bind_rows(

data.PEG.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

data.PEG.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.PEG.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 3 & run.level == 0.5)
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.PEG.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 3 & run.level == 0.5)
  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) +
    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="Set1") +
    facet_wrap(~Camera_ID, scales="free_y") -> p

#plot <- (p + theme(axis.title.x=element_blank())) / 
#(p + xlim(100, 200) + theme(legend.position = "none") ) #/ 
#(p + xlim(100, 300) + theme(legend.position = "none") ) 

ggsave(
  "PEG-p90-adjusted-best-local.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 4)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_local_window.png]]
*** Best results - global window
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

bind_rows(

data.PEG.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

data.PEG.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.PEG.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.5)
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.PEG.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.5)
  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) + 
    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="RdYlGn") +
    facet_wrap(~Camera_ID, scales="free") -> p

#(p + theme(axis.title.x=element_blank())) #/ 
#(p + xlim(100, 200) + theme(legend.position = "none") )

ggsave(
  "PEG-p90-adjusted-best-global.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 4)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_global_window.png]]
*** Best results - all
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 1000 :height 400 :session *R-local*

bind_rows(

data.PEG.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "Manual Filter"),

data.PEG.bigger %>%
  filter(L_mean > 10) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Type = "L* Filter"),

data.PEG.bigger.p90 %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 
  ) %>%
  mutate(Type = paste("Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
,

data.PEG.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) | 
    (run.window == 3 & run.level == 0.8)
  ) %>%
  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    mutate(NewType = case_when(grepl("to", Type) ~ "Manual Filter",
                               grepl("lstar", Type) ~ "L* Filter",
                               grepl("Lstar", Type) ~ "L* Filter - Adjusted",
                               #grepl("after_L", Type) ~ "Adjusted after L* filter",
                               #grepl("twice", Type) ~ "Twice",
                               TRUE ~ "Adjusted")) %>%
#   mutate(Type = gsub(".*\\ - ", "", Type)) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
#    ylim(0.4, 0.5)  
#    xlim(50, 200) + 
#    theme(legend.position = "top") +
    labs(color='window -- level')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    scale_color_brewer(palette="RdYlGn") +
    facet_grid(rows=vars(Camera_ID), scales="free") -> p

#(p + theme(axis.title.x=element_blank())) #/ 
#(p + xlim(100, 200) + theme(legend.position = "none") )

ggsave(
  "PEG-p90-adjusted-best.pdf",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 12,
  height = 4)

#+end_src

#+RESULTS:
[[file:~/R-images/image-Best_results_-_all.png]]

** All together
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 400 :height 800 :session *R-local*

bind_rows(

data.AHS.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(dataset = "AHS") %>%
  mutate(Type = "Hour-based filter"),

data.AHS.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 
  ) %>%
  mutate(dataset = "AHS") %>%
  mutate(Type = if_else(run.window==3, paste0("Local (", run.level, ")"), paste0("Global (", run.level, ")"))) %>%
#  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line() +
#    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
    theme(legend.position = "bottom") +
    labs(color='Type')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    theme(
      legend.position = c(0.08, 0.85),
      legend.key.size = unit(0.40, 'cm'),
      legend.title = element_text(size=14),
      legend.text = element_text(size=13)
    ) +
    scale_color_brewer(palette="Set1", labels = c("Global (0.8)", "Local (0.8)", "Hour-based filter")) +
    facet_grid(Camera_ID~dataset, scales="free") -> p.AHS

bind_rows(

data.GDK.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(dataset = "GDK") %>%
  mutate(Type = "Hour-based filter"),

data.GDK.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 
  ) %>%
  mutate(dataset = "GDK") %>%
  mutate(Type = if_else(run.window==3, paste0("Local (", run.level, ")"), paste0("Global (", run.level, ")"))) %>%
#  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line() +
#    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
    theme(legend.position = "bottom") +
    labs(color='Type')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    theme(
      legend.position = c(0.08, 0.85),
      legend.key.size = unit(0.40, 'cm'),
      legend.title = element_text(size=14),
      legend.text = element_text(size=13)
    ) +
    scale_color_brewer(palette="Set1", labels = c("Global (0.8)", "Local (0.8)", "Hour-based filter")) +
    facet_grid(Camera_ID~dataset, scales="free") -> p.GDK

bind_rows(

data.PEG.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Camera_ID = "default") %>% 
  mutate(dataset = "PEG") %>%
  mutate(Type = "Hour-based filter"),

data.PEG.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 
  ) %>%
  mutate(Camera_ID = "default") %>%
  mutate(dataset = "PEG") %>%
  mutate(Type = if_else(run.window==3, paste0("Local (", run.level, ")"), paste0("Global (", run.level, ")"))) %>%
#  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))
) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line() +
#    geom_line(alpha=0.7) +
    geom_point(alpha=0.5) +
    theme_bw(base_size=16) +
    theme(legend.position = "bottom") +
    labs(color='Type')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
    theme(
      legend.position = c(0.08, 0.85),
      legend.key.size = unit(0.40, 'cm'),
      legend.title = element_text(size=14),
      legend.text = element_text(size=13)
    ) +
    scale_color_brewer(palette="Set1", labels = c("Global (0.8)", "Local (0.8)", "Hour-based filter")) +
    facet_grid(Camera_ID~dataset, scales="free") -> p.PEG

(p.AHS / p.GDK / p.PEG ) + plot_layout(heights = c(2, 3, 1))


#ggsave(
#  "AHS-p90-adjusted-best.pdf",
#  plot = p,
#  path = "~/Documents/mestrado/cerrado_paper/images/results",
##  scale = 1,
#  width = 12,
#  height = 6)

#+end_src

#+RESULTS:
[[file:~/R-images/image-All_together.png]]
** All together 2
#+begin_src R :results output file graphics :file (concat "~/R-images/image-" (replace-regexp-in-string " " "_" (nth 4 (org-heading-components))) ".png") :exports both :width 800 :height 400 :session *R-local*

bind_rows(

data.AHS.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(dataset = "AHS") %>%
  mutate(Type = "Hour-based filter"),

data.AHS.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 
  ) %>%
  mutate(dataset = "AHS") %>%
  mutate(Type = if_else(run.window==3, "Local adjust", "Global adjust")) %>%
#  mutate(Type = if_else(run.window==3, paste0("Local (", run.level, ")"), paste0("Global (", run.level, ")"))) %>%
#  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run")),

data.GDK.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(dataset = "GDK") %>%
  mutate(Type = "Hour-based filter"),

data.GDK.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 
  ) %>%
  mutate(dataset = "GDK") %>%
  mutate(Type = if_else(run.window==3, "Local adjust", "Global adjust")) %>%
#  mutate(Type = if_else(run.window==3, paste0("Local (", run.level, ")"), paste0("Global (", run.level, ")"))) %>%
#  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run")),

data.PEG.bigger %>%
  filter(between(Hour, 8, 15)) %>%
  group_by(Camera_ID) %>%
  group_modify(~p90_aggregation_simple(.x)) %>%
  mutate(Camera_ID = "default") %>% 
  mutate(dataset = "PEG") %>%
  mutate(Type = "Hour-based filter"),

data.PEG.bigger.p90.lstar %>%
  select(doy, p90.merged.gcc, run.level, run.window, Camera_ID) %>%
  mutate(Code = paste(sprintf("%.2d", run.window), run.level, sep=" -- ")) %>%
  rename(p90 = p90.merged.gcc, DOY = doy) %>%
  filter(
    (run.window == 365 & run.level == 0.8) |
    (run.window == 3 & run.level == 0.8) 
  ) %>%
  mutate(Camera_ID = "default") %>%
  mutate(dataset = "PEG") %>%
  mutate(Type = if_else(run.window==3, "Local adjust", "Global adjust")) %>%
#  mutate(Type = if_else(run.window==3, paste0("Local (", run.level, ")"), paste0("Global (", run.level, ")"))) %>%
#  mutate(Type = paste("L/Adj", Code, sep=" - ")) %>%
  select(-Code, -contains("run"))

) %>%
  mutate(dataset_cam = paste(dataset, Camera_ID, sep=" - ")) %>%
    ggplot(aes(x=DOY, y = p90, color=as.factor(Type))) +
    geom_line() +
#    geom_line(alpha=0.7) +
    geom_point(alpha=0.3) +
    theme_bw(base_size=16) +
    theme(legend.position = "top") +
    labs(color='Type:')  +
    xlab("DOY") + 
    ylab("Gcc P90") + 
#    theme(
#      legend.position = c(0.08, 0.85),
#      legend.key.size = unit(0.40, 'cm'),
#      legend.title = element_text(size=14), 
#      legend.text = element_text(size=13)
#    ) +
#    scale_color_brewer(palette="Set1", labels = c("Global (0.8)", "Local (0.8)", "Hour-based filter")) +
    scale_color_brewer(palette="Set1") +
    facet_wrap(~dataset_cam, ncol=3, scales="free_y") -> p
#    facet_wrap(~dataset_cam, ncol=3) -> p

ggsave(
  "impacts-on-p90.png",
  plot = p,
  path = "~/Documents/mestrado/cerrado_paper/images/results",
#  scale = 1,
  width = 15,
  height = 10)


#+end_src

#+RESULTS:
[[file:~/R-images/image-All_together_2.png]]

* Test
** Group by n window
#+begin_src R :results output :exports both :session *R-local*

group_by_n_window <- function(input.dataset, window_size=3){

#  input.dataset %>%
#    mutate(doy = Day, year = Year) -> df.center
  
  input.dataset %>%
    select(year, doy) %>%
    distinct %>%
    arrange(year, doy) -> input.arranged


  if(window_size >= nrow(input.arranged)){
    window_size <- nrow(input.arranged) - 1
  } 

  input.arranged %>%
    mutate(max.doy = max(doy)) %>%
    mutate(total = n()) %>%
   mutate(line_number = row_number()) %>%
   mutate(order = as.integer(line_number / window_size) + 1) -> df.center.order
#    print %>%
#    slice(1:(tail(seq(1,n(), by=window_size), n=1)-1)) %>%
#    slice(1:(tail(seq(1,n(), by=window_size), n=1))) %>%
#    mutate(order = rep(1:(n()/window_size), each=window_size)) -> df.center.order

  input.dataset %>%
    # Associate groups and filter out those pictures without a group
    left_join(df.center.order, by = c("year", "doy")) %>%
    filter(!is.na(order)) %>%
    return() 

#df.center.moving_window %>%
#  rename(
#    x = r_mean,
#    y = g_mean,
#    z = b_mean
#  ) %>%
#   select(order, x, y, z, Picture.Path) -> df

}

#+end_src

#+RESULTS:


** Test it out
#+begin_src R :results output :exports both :session *R-local*
data.AHS.bigger %>%
      rename(Gcc_Bruna = Gcc) %>%
      rename(x=L_mean, y=A_mean, z=B_mean) %>%
      rename(year = Year, doy = DOY) %>%
      group_by(Camera_ID) %>% 
      group_modify(~group_by_n_window(.x, window_size=100)) %>%
      select(doy, order) %>%
      distinct() %>% as.data.frame
#+end_src

#+RESULTS:
#+begin_example
Adding missing grouping variables: `Camera_ID`
    Camera_ID doy order
1       f02_u   1     1
2       f02_u   2     1
3       f02_u   3     1
4       f02_u   4     1
5       f02_u   5     1
6       f02_u   6     1
7       f02_u   7     1
8       f02_u   8     1
9       f02_u   9     1
10      f02_u  10     1
11      f02_u  11     1
12      f02_u  12     1
13      f02_u  13     1
14      f02_u  14     1
15      f02_u  15     1
16      f02_u  16     1
17      f02_u  17     1
18      f02_u  18     1
19      f02_u  19     1
20      f02_u  20     1
21      f02_u  21     1
22      f02_u  22     1
23      f02_u  23     1
24      f02_u  24     1
25      f02_u  25     1
26      f02_u  26     1
27      f02_u  27     1
28      f02_u  28     1
29      f02_u  29     1
30      f02_u  30     1
31      f02_u  31     1
32      f02_u  32     1
33      f02_u  33     1
34      f02_u  34     1
35      f02_u  35     1
36      f02_u  36     1
37      f02_u  37     1
38      f02_u  38     1
39      f02_u  39     1
40      f02_u  40     1
41      f02_u  41     1
42      f02_u  42     1
43      f02_u  43     1
44      f02_u  44     1
45      f02_u  45     1
46      f02_u  46     1
47      f02_u  47     1
48      f02_u  48     1
49      f02_u  49     1
50      f02_u  50     1
51      f02_u  51     1
52      f02_u  52     1
53      f02_u  53     1
54      f02_u  54     1
55      f02_u  55     1
56      f02_u  56     1
57      f02_u  57     1
58      f02_u  58     1
59      f02_u  59     1
60      f02_u  60     1
61      f02_u  61     1
62      f02_u  62     1
63      f02_u  63     1
64      f02_u  64     1
65      f02_u  65     1
66      f02_u  66     1
67      f02_u  67     1
68      f02_u  68     1
69      f02_u  69     1
70      f02_u  70     1
71      f02_u  71     1
72      f02_u  72     1
73      f02_u  73     1
74      f02_u  74     1
75      f02_u  75     1
76      f02_u  76     1
77      f02_u  77     1
78      f02_u  78     1
79      f02_u  79     1
80      f02_u  80     1
81      f02_u  81     1
82      f02_u  82     1
83      f02_u  83     1
84      f02_u  84     1
85      f02_u  85     1
86      f02_u  86     1
87      f02_u  87     1
88      f02_u  88     1
89      f02_u  89     1
90      f02_u  90     1
91      f02_u  91     1
92      f02_u  92     1
93      f02_u  93     1
94      f02_u  94     1
95      f02_u  95     1
96      f02_u  96     1
97      f02_u  97     1
98      f02_u  98     1
99      f02_u  99     1
100     f02_u 100     2
101     f02_u 101     2
102     f02_u 102     2
103     f02_u 103     2
104     f02_u 104     2
105     f02_u 105     2
106     f02_u 106     2
107     f02_u 107     2
108     f02_u 108     2
109     f02_u 109     2
110     f02_u 110     2
111     f02_u 111     2
112     f02_u 112     2
113     f02_u 113     2
114     f02_u 114     2
115     f02_u 115     2
116     f02_u 116     2
117     f02_u 117     2
118     f02_u 118     2
119     f02_u 119     2
120     f02_u 120     2
121     f02_u 123     2
122     f02_u 124     2
123     f02_u 125     2
124     f02_u 126     2
125     f02_u 127     2
126     f02_u 128     2
127     f02_u 129     2
128     f02_u 130     2
129     f02_u 131     2
130     f02_u 132     2
131     f02_u 133     2
132     f02_u 134     2
133     f02_u 135     2
134     f02_u 136     2
135     f02_u 137     2
136     f02_u 138     2
137     f02_u 139     2
138     f02_u 140     2
139     f02_u 141     2
140     f02_u 142     2
141     f02_u 143     2
142     f02_u 144     2
143     f02_u 145     2
144     f02_u 146     2
145     f02_u 147     2
146     f02_u 148     2
147     f02_u 149     2
148     f02_u 150     2
149     f02_u 151     2
150     f02_u 152     2
151     f02_u 153     2
152     f02_u 154     2
153     f02_u 155     2
154     f02_u 156     2
155     f02_u 157     2
156     f02_u 158     2
157     f02_u 159     2
158     f02_u 160     2
159     f02_u 161     2
160     f02_u 162     2
161     f02_u 163     2
162     f02_u 164     2
163     f02_u 165     2
164     f02_u 166     2
165     f02_u 167     2
166     f02_u 168     2
167     f02_u 169     2
168     f02_u 170     2
169     f02_u 171     2
170     f02_u 172     2
171     f02_u 173     2
172     f02_u 174     2
173     f02_u 175     2
174     f02_u 176     2
175     f02_u 177     2
176     f02_u 178     2
177     f02_u 179     2
178     f02_u 180     2
179     f02_u 181     2
180     f02_u 182     2
181     f02_u 183     2
182     f02_u 184     2
183     f02_u 185     2
184     f02_u 186     2
185     f02_u 187     2
186     f02_u 188     2
187     f02_u 189     2
188     f02_u 190     2
189     f02_u 191     2
190     f02_u 192     2
191     f02_u 194     2
192     f02_u 195     2
193     f02_u 196     2
194     f02_u 197     2
195     f02_u 198     2
196     f02_u 199     2
197     f02_u 200     2
198     f02_u 201     2
199     f02_u 202     2
200     f02_u 203     3
201     f02_u 204     3
202     f02_u 205     3
203     f02_u 206     3
204     f02_u 207     3
205     f02_u 208     3
206     f02_u 209     3
207     f02_u 210     3
208     f02_u 211     3
209     f02_u 212     3
210     f02_u 213     3
211     f02_u 214     3
212     f02_u 215     3
213     f02_u 216     3
214     f02_u 217     3
215     f02_u 218     3
216     f02_u 219     3
217     f02_u 220     3
218     f02_u 221     3
219     f02_u 222     3
220     f02_u 223     3
221     f02_u 224     3
222     f02_u 225     3
223     f02_u 226     3
224     f02_u 227     3
225     f02_u 228     3
226     f02_u 229     3
227     f02_u 230     3
228     f02_u 231     3
229     f02_u 232     3
230     f02_u 234     3
231     f02_u 235     3
232     f02_u 236     3
233     f02_u 237     3
234     f02_u 238     3
235     f02_u 239     3
236     f02_u 240     3
237     f02_u 241     3
238     f02_u 242     3
239     f02_u 243     3
240     f02_u 244     3
241     f02_u 245     3
242     f02_u 246     3
243     f02_u 247     3
244     f02_u 248     3
245     f02_u 249     3
246     f02_u 250     3
247     f02_u 251     3
248     f02_u 252     3
249     f02_u 253     3
250     f02_u 254     3
251     f02_u 255     3
252     f02_u 256     3
253     f02_u 257     3
254     f02_u 258     3
255     f02_u 259     3
256     f02_u 260     3
257     f02_u 261     3
258     f02_u 262     3
259     f02_u 263     3
260     f02_u 264     3
261     f02_u 265     3
262     f02_u 266     3
263     f02_u 267     3
264     f02_u 268     3
265     f02_u 269     3
266     f02_u 270     3
267     f02_u 271     3
268     f02_u 272     3
269     f02_u 273     3
270     f02_u 274     3
271     f02_u 275     3
272     f02_u 276     3
273     f02_u 277     3
274     f02_u 278     3
275     f02_u 279     3
276     f02_u 280     3
277     f02_u 281     3
278     f02_u 282     3
279     f02_u 283     3
280     f02_u 284     3
281     f02_u 285     3
282     f02_u 286     3
283     f02_u 287     3
284     f02_u 288     3
285     f02_u 289     3
286     f02_u 290     3
287     f02_u 291     3
288     f02_u 292     3
289     f02_u 293     3
290     f02_u 294     3
291     f02_u 295     3
292     f02_u 296     3
293     f02_u 297     3
294     f02_u 298     3
295     f02_u 299     3
296     f02_u 300     3
297     f02_u 301     3
298     f02_u 302     3
299     f02_u 303     3
300     f02_u 304     4
301     f02_u 305     4
302     f02_u 306     4
303     f02_u 307     4
304     f02_u 308     4
305     f02_u 309     4
306     f02_u 310     4
307     f02_u 311     4
308     f02_u 312     4
309     f02_u 313     4
310     f02_u 314     4
311     f02_u 315     4
312     f02_u 316     4
313     f02_u 317     4
314     f02_u 318     4
315     f02_u 319     4
316     f02_u 320     4
317     f02_u 321     4
318     f02_u 322     4
319     f02_u 323     4
320     f02_u 324     4
321     f02_u 325     4
322     f02_u 326     4
323     f02_u 327     4
324     f02_u 328     4
325     f02_u 329     4
326     f02_u 330     4
327     f02_u 331     4
328     f02_u 332     4
329     f02_u 333     4
330     f02_u 334     4
331     f02_u 335     4
332     f02_u 336     4
333     f02_u 337     4
334     f02_u 338     4
335     f02_u 339     4
336     f02_u 340     4
337     f02_u 341     4
338     f02_u 342     4
339     f02_u 343     4
340     f02_u 344     4
341     f02_u 345     4
342     f02_u 346     4
343     f02_u 347     4
344     f02_u 348     4
345     f02_u 349     4
346     f02_u 350     4
347     f02_u 351     4
348     f02_u 352     4
349     f02_u 353     4
350     f02_u 354     4
351     f02_u 355     4
352     f02_u 356     4
353     f02_u 357     4
354     f02_u 358     4
355     f02_u 359     4
356     f02_u 360     4
357     f02_u 361     4
358     f02_u 362     4
359     f02_u 363     4
360     f02_u 364     4
361     f02_u 365     4
362     t24_d   1     1
363     t24_d   2     1
364     t24_d   3     1
365     t24_d   4     1
366     t24_d   5     1
367     t24_d   6     1
368     t24_d   7     1
369     t24_d   8     1
370     t24_d   9     1
371     t24_d  10     1
372     t24_d  11     1
373     t24_d  12     1
374     t24_d  13     1
375     t24_d  14     1
376     t24_d  15     1
377     t24_d  16     1
378     t24_d  17     1
379     t24_d  18     1
380     t24_d  19     1
381     t24_d  20     1
382     t24_d  21     1
383     t24_d  22     1
384     t24_d  23     1
385     t24_d  24     1
386     t24_d  25     1
387     t24_d  26     1
388     t24_d  27     1
389     t24_d  28     1
390     t24_d  29     1
391     t24_d  30     1
392     t24_d  31     1
393     t24_d  32     1
394     t24_d  33     1
395     t24_d  34     1
396     t24_d  35     1
397     t24_d  36     1
398     t24_d  37     1
399     t24_d  38     1
400     t24_d  39     1
401     t24_d  40     1
402     t24_d  41     1
403     t24_d  42     1
404     t24_d  43     1
405     t24_d  44     1
406     t24_d  45     1
407     t24_d  46     1
408     t24_d  47     1
409     t24_d  48     1
410     t24_d  49     1
411     t24_d  50     1
412     t24_d  51     1
413     t24_d  52     1
414     t24_d  53     1
415     t24_d  54     1
416     t24_d  55     1
417     t24_d  56     1
418     t24_d  57     1
419     t24_d  58     1
420     t24_d  59     1
421     t24_d  60     1
422     t24_d  61     1
423     t24_d  62     1
424     t24_d  63     1
425     t24_d  64     1
426     t24_d  65     1
427     t24_d  66     1
428     t24_d  67     1
429     t24_d  68     1
430     t24_d  69     1
431     t24_d  70     1
432     t24_d  71     1
433     t24_d  72     1
434     t24_d  73     1
435     t24_d  74     1
436     t24_d  75     1
437     t24_d  76     1
438     t24_d  77     1
439     t24_d  78     1
440     t24_d  79     1
441     t24_d  80     1
442     t24_d  81     1
443     t24_d  82     1
444     t24_d  83     1
445     t24_d  84     1
446     t24_d  85     1
447     t24_d  86     1
448     t24_d  87     1
449     t24_d  88     1
450     t24_d  89     1
451     t24_d  90     1
452     t24_d  91     1
453     t24_d  92     1
454     t24_d  93     1
455     t24_d  94     1
456     t24_d  95     1
457     t24_d  96     1
458     t24_d  97     1
459     t24_d  98     1
460     t24_d  99     1
461     t24_d 100     2
462     t24_d 101     2
463     t24_d 102     2
464     t24_d 103     2
465     t24_d 104     2
466     t24_d 105     2
467     t24_d 106     2
468     t24_d 107     2
469     t24_d 108     2
470     t24_d 109     2
471     t24_d 110     2
472     t24_d 111     2
473     t24_d 112     2
474     t24_d 113     2
475     t24_d 114     2
476     t24_d 115     2
477     t24_d 116     2
478     t24_d 117     2
479     t24_d 118     2
480     t24_d 119     2
481     t24_d 120     2
482     t24_d 123     2
483     t24_d 124     2
484     t24_d 125     2
485     t24_d 126     2
486     t24_d 127     2
487     t24_d 128     2
488     t24_d 129     2
489     t24_d 130     2
490     t24_d 131     2
491     t24_d 132     2
492     t24_d 133     2
493     t24_d 134     2
494     t24_d 135     2
495     t24_d 136     2
496     t24_d 137     2
497     t24_d 138     2
498     t24_d 139     2
499     t24_d 140     2
500     t24_d 141     2
501     t24_d 142     2
502     t24_d 143     2
503     t24_d 144     2
504     t24_d 145     2
505     t24_d 146     2
506     t24_d 147     2
507     t24_d 148     2
508     t24_d 149     2
509     t24_d 150     2
510     t24_d 151     2
511     t24_d 152     2
512     t24_d 153     2
513     t24_d 154     2
514     t24_d 155     2
515     t24_d 156     2
516     t24_d 157     2
517     t24_d 158     2
518     t24_d 159     2
519     t24_d 160     2
520     t24_d 161     2
521     t24_d 162     2
522     t24_d 163     2
523     t24_d 164     2
524     t24_d 165     2
525     t24_d 166     2
526     t24_d 167     2
527     t24_d 168     2
528     t24_d 169     2
529     t24_d 170     2
530     t24_d 171     2
531     t24_d 172     2
532     t24_d 173     2
533     t24_d 174     2
534     t24_d 175     2
535     t24_d 176     2
536     t24_d 177     2
537     t24_d 178     2
538     t24_d 179     2
539     t24_d 180     2
540     t24_d 181     2
541     t24_d 182     2
542     t24_d 183     2
543     t24_d 184     2
544     t24_d 185     2
545     t24_d 186     2
546     t24_d 187     2
547     t24_d 188     2
548     t24_d 189     2
549     t24_d 190     2
550     t24_d 191     2
551     t24_d 192     2
552     t24_d 194     2
553     t24_d 195     2
554     t24_d 196     2
555     t24_d 197     2
556     t24_d 198     2
557     t24_d 199     2
558     t24_d 200     2
559     t24_d 201     2
560     t24_d 202     2
561     t24_d 203     3
562     t24_d 204     3
563     t24_d 205     3
564     t24_d 206     3
565     t24_d 207     3
566     t24_d 208     3
567     t24_d 209     3
568     t24_d 210     3
569     t24_d 211     3
570     t24_d 212     3
571     t24_d 213     3
572     t24_d 214     3
573     t24_d 215     3
574     t24_d 216     3
575     t24_d 217     3
576     t24_d 218     3
577     t24_d 219     3
578     t24_d 220     3
579     t24_d 221     3
580     t24_d 222     3
581     t24_d 223     3
582     t24_d 224     3
583     t24_d 225     3
584     t24_d 226     3
585     t24_d 227     3
586     t24_d 228     3
587     t24_d 229     3
588     t24_d 230     3
589     t24_d 231     3
590     t24_d 232     3
591     t24_d 234     3
592     t24_d 235     3
593     t24_d 236     3
594     t24_d 237     3
595     t24_d 238     3
596     t24_d 239     3
597     t24_d 240     3
598     t24_d 241     3
599     t24_d 242     3
600     t24_d 243     3
601     t24_d 244     3
602     t24_d 245     3
603     t24_d 246     3
604     t24_d 247     3
605     t24_d 248     3
606     t24_d 249     3
607     t24_d 250     3
608     t24_d 251     3
609     t24_d 252     3
610     t24_d 253     3
611     t24_d 254     3
612     t24_d 255     3
613     t24_d 256     3
614     t24_d 257     3
615     t24_d 258     3
616     t24_d 259     3
617     t24_d 260     3
618     t24_d 261     3
619     t24_d 262     3
620     t24_d 263     3
621     t24_d 264     3
622     t24_d 265     3
623     t24_d 266     3
624     t24_d 267     3
625     t24_d 268     3
626     t24_d 269     3
627     t24_d 270     3
628     t24_d 271     3
629     t24_d 272     3
630     t24_d 273     3
631     t24_d 274     3
632     t24_d 275     3
633     t24_d 276     3
634     t24_d 277     3
635     t24_d 278     3
636     t24_d 279     3
637     t24_d 280     3
638     t24_d 281     3
639     t24_d 282     3
640     t24_d 283     3
641     t24_d 284     3
642     t24_d 285     3
643     t24_d 286     3
644     t24_d 287     3
645     t24_d 288     3
646     t24_d 289     3
647     t24_d 290     3
648     t24_d 291     3
649     t24_d 292     3
650     t24_d 293     3
651     t24_d 294     3
652     t24_d 295     3
653     t24_d 296     3
654     t24_d 297     3
655     t24_d 298     3
656     t24_d 299     3
657     t24_d 300     3
658     t24_d 301     3
659     t24_d 302     3
660     t24_d 303     3
661     t24_d 304     4
662     t24_d 305     4
663     t24_d 306     4
664     t24_d 307     4
665     t24_d 308     4
666     t24_d 309     4
667     t24_d 310     4
668     t24_d 311     4
669     t24_d 312     4
670     t24_d 313     4
671     t24_d 314     4
672     t24_d 315     4
673     t24_d 316     4
674     t24_d 317     4
675     t24_d 318     4
676     t24_d 319     4
677     t24_d 320     4
678     t24_d 321     4
679     t24_d 322     4
680     t24_d 323     4
681     t24_d 324     4
682     t24_d 325     4
683     t24_d 326     4
684     t24_d 327     4
685     t24_d 328     4
686     t24_d 329     4
687     t24_d 330     4
688     t24_d 331     4
689     t24_d 332     4
690     t24_d 333     4
691     t24_d 334     4
692     t24_d 335     4
693     t24_d 336     4
694     t24_d 337     4
695     t24_d 338     4
696     t24_d 339     4
697     t24_d 340     4
698     t24_d 341     4
699     t24_d 342     4
700     t24_d 343     4
701     t24_d 344     4
702     t24_d 345     4
703     t24_d 346     4
704     t24_d 347     4
705     t24_d 348     4
706     t24_d 349     4
707     t24_d 350     4
708     t24_d 351     4
709     t24_d 352     4
710     t24_d 353     4
711     t24_d 354     4
712     t24_d 355     4
713     t24_d 356     4
714     t24_d 357     4
715     t24_d 358     4
716     t24_d 359     4
717     t24_d 360     4
718     t24_d 361     4
719     t24_d 362     4
720     t24_d 363     4
721     t24_d 364     4
722     t24_d 365     4
#+end_example


** Investigating 
#+begin_src R :results output :exports both :session *R-local*
window_size <- 100

data.AHS.bigger %>%
      rename(Gcc_Bruna = Gcc) %>%
      rename(x=L_mean, y=A_mean, z=B_mean) %>%
      rename(year = Year, doy = DOY) %>%
    select(year, doy) %>%
    distinct %>%
    arrange(year, doy) %>%
   mutate(max.doy = max(doy)) %>%
    mutate(total = n()) %>%
#    slice(1:(tail(seq(1,n(), by=window_size), n=1)-1)) %>%
#    mutate(order = rep(1:(n()/window_size), each=window_size))
   mutate(line_number = row_number()) %>%
   mutate(order = as.integer(line_number / window_size) + 1) %>%
   distinct() %>%
   print(n=365)

#+end_src

#+RESULTS:
#+begin_example
# A tibble: 361 × 6
     year   doy max.doy total line_number order
    <
<
  <
<
      <
<dbl>
  1  2011     1     365   361           1     1
  2  2011     2     365   361           2     1
  3  2011     3     365   361           3     1
  4  2011     4     365   361           4     1
  5  2011     5     365   361           5     1
  6  2011     6     365   361           6     1
  7  2011     7     365   361           7     1
  8  2011     8     365   361           8     1
  9  2011     9     365   361           9     1
 10  2011    10     365   361          10     1
 11  2011    11     365   361          11     1
 12  2011    12     365   361          12     1
 13  2011    13     365   361          13     1
 14  2011    14     365   361          14     1
 15  2011    15     365   361          15     1
 16  2011    16     365   361          16     1
 17  2011    17     365   361          17     1
 18  2011    18     365   361          18     1
 19  2011    19     365   361          19     1
 20  2011    20     365   361          20     1
 21  2011    21     365   361          21     1
 22  2011    22     365   361          22     1
 23  2011    23     365   361          23     1
 24  2011    24     365   361          24     1
 25  2011    25     365   361          25     1
 26  2011    26     365   361          26     1
 27  2011    27     365   361          27     1
 28  2011    28     365   361          28     1
 29  2011    29     365   361          29     1
 30  2011    30     365   361          30     1
 31  2011    31     365   361          31     1
 32  2011    32     365   361          32     1
 33  2011    33     365   361          33     1
 34  2011    34     365   361          34     1
 35  2011    35     365   361          35     1
 36  2011    36     365   361          36     1
 37  2011    37     365   361          37     1
 38  2011    38     365   361          38     1
 39  2011    39     365   361          39     1
 40  2011    40     365   361          40     1
 41  2011    41     365   361          41     1
 42  2011    42     365   361          42     1
 43  2011    43     365   361          43     1
 44  2011    44     365   361          44     1
 45  2011    45     365   361          45     1
 46  2011    46     365   361          46     1
 47  2011    47     365   361          47     1
 48  2011    48     365   361          48     1
 49  2011    49     365   361          49     1
 50  2011    50     365   361          50     1
 51  2011    51     365   361          51     1
 52  2011    52     365   361          52     1
 53  2011    53     365   361          53     1
 54  2011    54     365   361          54     1
 55  2011    55     365   361          55     1
 56  2011    56     365   361          56     1
 57  2011    57     365   361          57     1
 58  2011    58     365   361          58     1
 59  2011    59     365   361          59     1
 60  2011    60     365   361          60     1
 61  2011    61     365   361          61     1
 62  2011    62     365   361          62     1
 63  2011    63     365   361          63     1
 64  2011    64     365   361          64     1
 65  2011    65     365   361          65     1
 66  2011    66     365   361          66     1
 67  2011    67     365   361          67     1
 68  2011    68     365   361          68     1
 69  2011    69     365   361          69     1
 70  2011    70     365   361          70     1
 71  2011    71     365   361          71     1
 72  2011    72     365   361          72     1
 73  2011    73     365   361          73     1
 74  2011    74     365   361          74     1
 75  2011    75     365   361          75     1
 76  2011    76     365   361          76     1
 77  2011    77     365   361          77     1
 78  2011    78     365   361          78     1
 79  2011    79     365   361          79     1
 80  2011    80     365   361          80     1
 81  2011    81     365   361          81     1
 82  2011    82     365   361          82     1
 83  2011    83     365   361          83     1
 84  2011    84     365   361          84     1
 85  2011    85     365   361          85     1
 86  2011    86     365   361          86     1
 87  2011    87     365   361          87     1
 88  2011    88     365   361          88     1
 89  2011    89     365   361          89     1
 90  2011    90     365   361          90     1
 91  2011    91     365   361          91     1
 92  2011    92     365   361          92     1
 93  2011    93     365   361          93     1
 94  2011    94     365   361          94     1
 95  2011    95     365   361          95     1
 96  2011    96     365   361          96     1
 97  2011    97     365   361          97     1
 98  2011    98     365   361          98     1
 99  2011    99     365   361          99     1
100  2011   100     365   361         100     2
101  2011   101     365   361         101     2
102  2011   102     365   361         102     2
103  2011   103     365   361         103     2
104  2011   104     365   361         104     2
105  2011   105     365   361         105     2
106  2011   106     365   361         106     2
107  2011   107     365   361         107     2
108  2011   108     365   361         108     2
109  2011   109     365   361         109     2
110  2011   110     365   361         110     2
111  2011   111     365   361         111     2
112  2011   112     365   361         112     2
113  2011   113     365   361         113     2
114  2011   114     365   361         114     2
115  2011   115     365   361         115     2
116  2011   116     365   361         116     2
117  2011   117     365   361         117     2
118  2011   118     365   361         118     2
119  2011   119     365   361         119     2
120  2011   120     365   361         120     2
121  2011   123     365   361         121     2
122  2011   124     365   361         122     2
123  2011   125     365   361         123     2
124  2011   126     365   361         124     2
125  2011   127     365   361         125     2
126  2011   128     365   361         126     2
127  2011   129     365   361         127     2
128  2011   130     365   361         128     2
129  2011   131     365   361         129     2
130  2011   132     365   361         130     2
131  2011   133     365   361         131     2
132  2011   134     365   361         132     2
133  2011   135     365   361         133     2
134  2011   136     365   361         134     2
135  2011   137     365   361         135     2
136  2011   138     365   361         136     2
137  2011   139     365   361         137     2
138  2011   140     365   361         138     2
139  2011   141     365   361         139     2
140  2011   142     365   361         140     2
141  2011   143     365   361         141     2
142  2011   144     365   361         142     2
143  2011   145     365   361         143     2
144  2011   146     365   361         144     2
145  2011   147     365   361         145     2
146  2011   148     365   361         146     2
147  2011   149     365   361         147     2
148  2011   150     365   361         148     2
149  2011   151     365   361         149     2
150  2011   152     365   361         150     2
151  2011   153     365   361         151     2
152  2011   154     365   361         152     2
153  2011   155     365   361         153     2
154  2011   156     365   361         154     2
155  2011   157     365   361         155     2
156  2011   158     365   361         156     2
157  2011   159     365   361         157     2
158  2011   160     365   361         158     2
159  2011   161     365   361         159     2
160  2011   162     365   361         160     2
161  2011   163     365   361         161     2
162  2011   164     365   361         162     2
163  2011   165     365   361         163     2
164  2011   166     365   361         164     2
165  2011   167     365   361         165     2
166  2011   168     365   361         166     2
167  2011   169     365   361         167     2
168  2011   170     365   361         168     2
169  2011   171     365   361         169     2
170  2011   172     365   361         170     2
171  2011   173     365   361         171     2
172  2011   174     365   361         172     2
173  2011   175     365   361         173     2
174  2011   176     365   361         174     2
175  2011   177     365   361         175     2
176  2011   178     365   361         176     2
177  2011   179     365   361         177     2
178  2011   180     365   361         178     2
179  2011   181     365   361         179     2
180  2011   182     365   361         180     2
181  2011   183     365   361         181     2
182  2011   184     365   361         182     2
183  2011   185     365   361         183     2
184  2011   186     365   361         184     2
185  2011   187     365   361         185     2
186  2011   188     365   361         186     2
187  2011   189     365   361         187     2
188  2011   190     365   361         188     2
189  2011   191     365   361         189     2
190  2011   192     365   361         190     2
191  2011   194     365   361         191     2
192  2011   195     365   361         192     2
193  2011   196     365   361         193     2
194  2011   197     365   361         194     2
195  2011   198     365   361         195     2
196  2011   199     365   361         196     2
197  2011   200     365   361         197     2
198  2011   201     365   361         198     2
199  2011   202     365   361         199     2
200  2011   203     365   361         200     3
201  2011   204     365   361         201     3
202  2011   205     365   361         202     3
203  2011   206     365   361         203     3
204  2011   207     365   361         204     3
205  2011   208     365   361         205     3
206  2011   209     365   361         206     3
207  2011   210     365   361         207     3
208  2011   211     365   361         208     3
209  2011   212     365   361         209     3
210  2011   213     365   361         210     3
211  2011   214     365   361         211     3
212  2011   215     365   361         212     3
213  2011   216     365   361         213     3
214  2011   217     365   361         214     3
215  2011   218     365   361         215     3
216  2011   219     365   361         216     3
217  2011   220     365   361         217     3
218  2011   221     365   361         218     3
219  2011   222     365   361         219     3
220  2011   223     365   361         220     3
221  2011   224     365   361         221     3
222  2011   225     365   361         222     3
223  2011   226     365   361         223     3
224  2011   227     365   361         224     3
225  2011   228     365   361         225     3
226  2011   229     365   361         226     3
227  2011   230     365   361         227     3
228  2011   231     365   361         228     3
229  2011   232     365   361         229     3
230  2011   234     365   361         230     3
231  2011   235     365   361         231     3
232  2011   236     365   361         232     3
233  2011   237     365   361         233     3
234  2011   238     365   361         234     3
235  2011   239     365   361         235     3
236  2011   240     365   361         236     3
237  2011   241     365   361         237     3
238  2011   242     365   361         238     3
239  2011   243     365   361         239     3
240  2011   244     365   361         240     3
241  2011   245     365   361         241     3
242  2011   246     365   361         242     3
243  2011   247     365   361         243     3
244  2011   248     365   361         244     3
245  2011   249     365   361         245     3
246  2011   250     365   361         246     3
247  2011   251     365   361         247     3
248  2011   252     365   361         248     3
249  2011   253     365   361         249     3
250  2011   254     365   361         250     3
251  2011   255     365   361         251     3
252  2011   256     365   361         252     3
253  2011   257     365   361         253     3
254  2011   258     365   361         254     3
255  2011   259     365   361         255     3
256  2011   260     365   361         256     3
257  2011   261     365   361         257     3
258  2011   262     365   361         258     3
259  2011   263     365   361         259     3
260  2011   264     365   361         260     3
261  2011   265     365   361         261     3
262  2011   266     365   361         262     3
263  2011   267     365   361         263     3
264  2011   268     365   361         264     3
265  2011   269     365   361         265     3
266  2011   270     365   361         266     3
267  2011   271     365   361         267     3
268  2011   272     365   361         268     3
269  2011   273     365   361         269     3
270  2011   274     365   361         270     3
271  2011   275     365   361         271     3
272  2011   276     365   361         272     3
273  2011   277     365   361         273     3
274  2011   278     365   361         274     3
275  2011   279     365   361         275     3
276  2011   280     365   361         276     3
277  2011   281     365   361         277     3
278  2011   282     365   361         278     3
279  2011   283     365   361         279     3
280  2011   284     365   361         280     3
281  2011   285     365   361         281     3
282  2011   286     365   361         282     3
283  2011   287     365   361         283     3
284  2011   288     365   361         284     3
285  2011   289     365   361         285     3
286  2011   290     365   361         286     3
287  2011   291     365   361         287     3
288  2011   292     365   361         288     3
289  2011   293     365   361         289     3
290  2011   294     365   361         290     3
291  2011   295     365   361         291     3
292  2011   296     365   361         292     3
293  2011   297     365   361         293     3
294  2011   298     365   361         294     3
295  2011   299     365   361         295     3
296  2011   300     365   361         296     3
297  2011   301     365   361         297     3
298  2011   302     365   361         298     3
299  2011   303     365   361         299     3
300  2011   304     365   361         300     4
301  2011   305     365   361         301     4
302  2011   306     365   361         302     4
303  2011   307     365   361         303     4
304  2011   308     365   361         304     4
305  2011   309     365   361         305     4
306  2011   310     365   361         306     4
307  2011   311     365   361         307     4
308  2011   312     365   361         308     4
309  2011   313     365   361         309     4
310  2011   314     365   361         310     4
311  2011   315     365   361         311     4
312  2011   316     365   361         312     4
313  2011   317     365   361         313     4
314  2011   318     365   361         314     4
315  2011   319     365   361         315     4
316  2011   320     365   361         316     4
317  2011   321     365   361         317     4
318  2011   322     365   361         318     4
319  2011   323     365   361         319     4
320  2011   324     365   361         320     4
321  2011   325     365   361         321     4
322  2011   326     365   361         322     4
323  2011   327     365   361         323     4
324  2011   328     365   361         324     4
325  2011   329     365   361         325     4
326  2011   330     365   361         326     4
327  2011   331     365   361         327     4
328  2011   332     365   361         328     4
329  2011   333     365   361         329     4
330  2011   334     365   361         330     4
331  2011   335     365   361         331     4
332  2011   336     365   361         332     4
333  2011   337     365   361         333     4
334  2011   338     365   361         334     4
335  2011   339     365   361         335     4
336  2011   340     365   361         336     4
337  2011   341     365   361         337     4
338  2011   342     365   361         338     4
339  2011   343     365   361         339     4
340  2011   344     365   361         340     4
341  2011   345     365   361         341     4
342  2011   346     365   361         342     4
343  2011   347     365   361         343     4
344  2011   348     365   361         344     4
345  2011   349     365   361         345     4
346  2011   350     365   361         346     4
347  2011   351     365   361         347     4
348  2011   352     365   361         348     4
349  2011   353     365   361         349     4
350  2011   354     365   361         350     4
351  2011   355     365   361         351     4
352  2011   356     365   361         352     4
353  2011   357     365   361         353     4
354  2011   358     365   361         354     4
355  2011   359     365   361         355     4
356  2011   360     365   361         356     4
357  2011   361     365   361         357     4
358  2011   362     365   361         358     4
359  2011   363     365   361         359     4
360  2011   364     365   361         360     4
361  2011   365     365   361         361     4
#+end_example

